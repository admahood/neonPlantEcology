scale_color_brewer(palette = "Set1", name = "Family") +
ylab("Cover") +
xlab("eventID (Year)")
ggplot(lf_f, aes(x=eventID, y=cover, fill = family)) +
geom_boxplot(position="dodge") +
facet_wrap(~site, scales = "free_x") +
theme_bw() +
scale_color_brewer(palette = "Set1", name = "Family") +
ylab("Cover") +
xlab("eventID (Year)")
ggplot(lf_f, aes(x=eventID, y=cover, fill = family)) +
geom_boxplot(position="dodge") +
facet_wrap(~site, scales = "free_x") +
theme_bw() +
scale_color_brewer(palette = "Set1", name = "Family") +
ylab("Cover") +
xlab("eventID (Year)")
ggplot(lf_f, aes(x=eventID, y=cover, fill = family)) +
geom_boxplot(position="dodge") +
facet_wrap(~site, scales = "free_x") +
theme_bw() +
scale_fill_brewer(palette = "Set1", name = "Family") +
ylab("Cover") +
xlab("eventID (Year)")
ggplot(lf_f, aes(x=eventID, y=cover, fill = family)) +
geom_boxplot(position="dodge") +
facet_wrap(~site, scales = "free_x") +
theme_bw() +
scale_fill_brewer(palette = "Set1", name = "Family") +
ylab("Cover") +
xlab("eventID (Annual Timestep)")
p <- ggplot(lf_f, aes(x=eventID, y=cover, fill = family)) +
geom_boxplot(position="dodge") +
facet_wrap(~site, scales = "free_x") +
theme_bw() +
scale_fill_brewer(palette = "Set1", name = "Family") +
ylab("Cover") +
xlab("eventID (Annual Timestep)")
ggsave(plot = p, filename = "fig4.png", bg = "white", width = 6.5, height = 3.5)
ggsave(plot = p, filename = "fig4.png", bg = "white", width = 7.5, height = 3.5)
data("D14")
D14$`citation_10058_RELEASE-2023`
citation(D14)
citation(D14$`citation_10058_RELEASE-2023`)
D14$`citation_10058_RELEASE-2023`
load_all()
library(devtools)
load_all()
npe_site_ids()
sites
#'
#' @param all if TRUE, returns a vector of all siteID codes
#' @param domain can be one or more domain codes, as a character vector.
#' e.g. domain = c("D01", "D14")
#' @param type can be "Core Terrestrial" or "Relocatable Terrestrial"
#' @examples
#' all_sites <- npe_site_ids()
#'
#' @returns a vector of four letter site identification codes.
#' @export
npe_site_ids <- function(all = FALSE, domain = NA, type = NA){
requireNamespace("dplyr")
requireNamespace("sf")
data("sites")
if(all) return(sites$siteID)
if(!is.na(domain[1])) sites <- dplyr::filter(sites, domainNumb %in% domain)
if(!is.na(type[1])) sites <- dplyr::filter(sites, type %in% siteTYpe)
return(sites |> dplyr::pull(siteID) |> unique())
}
load_all()
rm(list = c("npe_site_ids"))
npe_site_ids()
npe_site_ids(domain = "D15")
npe_site_ids(domain = "D16")
npe_site_ids(domain = "D17")
dd <- 14
npe_site_ids(domain = "D7")
npe_site_ids(domain = "D07")
domain<- 7
is.numeric(domain)
domain
str_c("D", stringr::str_pad(domain, width = 2,side = "left", pad = "0"))
stringr::str_c("D", stringr::str_pad(domain, width = 2,side = "left", pad = "0"))
load_all()
npe_site_ids(domain = c(4,5))
npe_site_ids(domain = c("D04","D05"))
domain = c("D14", "9")
npe_site_ids(domain = domain)
domain
stringr::str_remove_all(domain, "D") |>
stringr::str_pad(width = 2, side = "left", pad = "0") |>
stringr::str_c("D", pattern = _)
load_all()
npe_site_ids(domain = c(14, "D02"))
npe_site_ids(domain = c("D02"))
npe_site_ids(domain = c("D02", "14"))
npe_site_ids(domain = c("D02", 15))
load_all()
npe_site_ids(domain = c("Northeast"))
npe_site_ids(domain = c("Northeast", "Blandy Experimental Farm"))
npe_site_ids(domain = c("Northeast", "Mid-Atlantic"))
load_all()
npe_site_ids()
load_all()
npe_site_ids()
load_all()
npe_site_ids()
load_all()
check(manual = TRUE, remote = TRUE)
data("sites")
sites <- site_polygons
site_polygons <- sites
save(site_polygons, file = "data/site_polygons.rda")
sites <- sf::st_set_geometry(sites, NULL)
sites
save(sites, file = "data/sites.rda")
document()
check(manual=T, remote=T)
load_all()
npe_site_ids(domain = c("Northeast", "Mid-Atlantic"))
npe_site_ids()
load_all()
npe_site_ids(domain = c("Northeast", "Mid-Atlantic"))
load_all()
check(manual=T, remote=T)
install()
install_github("admahood/neonPlantEcology")
library(neonPlantEcology)
neonPlantEcology::npe_download("D14")
load_all()
library(devtools)
load_all()
document()
check(remote=TRUE, manual = TRUE)
check(remote=TRUE, manual = TRUE)
data("site_polygons")
library(terra)
library(sf)
site_polygons
terra::rast("/home/a/data/koppen/Beck_KG_V1_present_0p0083.tif") -> koppen
koppen
site_polygons %>%
mutate(terra::extract(koppen))
library(dplyr)
site_polygons %>%
mutate(terra::extract(koppen))
site_polygons %>%
mutate(as(., "vect"), terra::extract(koppen))
site_polygons %>%
mutate(terra::extract(koppen), .)
site_polygons %>%
mutate(terra::extract(koppen, .))
site_polygons %>%
mutate(terra::extract(koppen, ., fun = "mean"))
site_polygons %>%
mutate(terra::extract(koppen, ., fun = "mode"))
?terra::extract
site_polygons %>%
mutate(terra::extract(koppen, ., fun = "median"))
site_polygons %>%
mutate(terra::extract(koppen, ., fun = "table"))
site_polygons %>%
mutate(terra::extract(koppen, ., fun = "mode"))
library(topomicro)
site_polygons %>%
mutate(terra::extract(koppen, ., fun = "median"))
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median"),
koppen_t = lut_kop[koppen_n])
lut_kop <- c("Af",  "Am", "Aw",
"BWh" ,"BWk","BSh" ,"BSk" ,
"Csa", "Csb" ,"Csc" ,"Cwa", "Cwb", "Cwc","Cfa" , "Cfb", "Cfc" ,
"Dsa" ,"Dsb" ,"Dsc" ,"Dsd","Dwa" ,"Dwb" ,"Dwc" ,"Dwd" ,
"Dfa", "Dfb","Dfc", "Dfd" ,
"ET",   "EF")
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median"),
koppen_t = lut_kop[koppen_n])
lut_kop <- c(rep(1,3), rep(2,4), rep(3,9), rep(4,12), rep(5,2))
names(lut_kop)<-c(1:30)
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median"),
koppen_t = lut_kop[koppen_n])
lut_kop <- c("Af",  "Am", "Aw",
"BWh" ,"BWk","BSh" ,"BSk" ,
"Csa", "Csb" ,"Csc" ,"Cwa", "Cwb", "Cwc","Cfa" , "Cfb", "Cfc" ,
"Dsa" ,"Dsb" ,"Dsc" ,"Dsd","Dwa" ,"Dwb" ,"Dwc" ,"Dwd" ,
"Dfa", "Dfb","Dfc", "Dfd" ,
"ET",   "EF")
lut_kop <- c(rep(1,3), rep(2,4), rep(3,9), rep(4,12), rep(5,2))
names(lut_kop)<-c(1:30)
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median"),
koppen_t = lut_kop[koppen_n])
lut_kop
lut_kop <- c("Af",  "Am", "Aw",
"BWh" ,"BWk","BSh" ,"BSk" ,
"Csa", "Csb" ,"Csc" ,"Cwa", "Cwb", "Cwc","Cfa" , "Cfb", "Cfc" ,
"Dsa" ,"Dsb" ,"Dsc" ,"Dsd","Dwa" ,"Dwb" ,"Dwc" ,"Dwd" ,
"Dfa", "Dfb","Dfc", "Dfd" ,
"ET",   "EF")
# lut_kop <- c(rep(1,3), rep(2,4), rep(3,9), rep(4,12), rep(5,2))
names(lut_kop)<-c(1:30)
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median"),
koppen_t = lut_kop[koppen_n])
lut_kop
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median"))
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=F),
koppen_t = lut_kop[koppen_n])
?terra::extract
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE),
koppen_t = lut_kop[koppen_n])
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE))
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE)),
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE),
koppen_t = lut_kop[Beck_KG_V1_present_0p0083])
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% as.numeric(),
koppen_t = lut_kop[Beck_KG_V1_present_0p0083])
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_t = lut_kop[Beck_KG_V1_present_0p0083])
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_t = lut_kop[koppen_n])
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE, raw=T),
koppen_t = lut_kop[koppen_n])
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_t = lut_kop[koppen_n])
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_t = lut_kop[koppen_n],
koppen_coarse = case_match(str_sub(koppen_t,),
"D" ~ "Arid"))
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_t = lut_kop[koppen_n],
koppen_coarse = case_match(stringr::str_sub(koppen_t,),
"D" ~ "Arid"))
?case_match
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_t = lut_kop[koppen_n],
koppen_coarse = case_match(stringr::str_sub(koppen_t,1,1),
"D" ~ "Arid"))
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_t = lut_kop[koppen_n],
koppen_coarse = case_match(stringr::str_sub(koppen_t,1,1),
"B" ~ "Arid",
"A" ~ "Equatorial",
"C" ~ "Temperate",
"D" ~ "Boreal",
"E" ~ "Polar"))
ai <- terra::rast("/home/a/data/aridity/Global-AI_ET0_v3_annual/ai_v3_yr.tif")
ai
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_fine = lut_kop[koppen_n],
koppen_coarse = case_match(stringr::str_sub(koppen_fine,1,1),
"B" ~ "Arid",
"A" ~ "Equatorial",
"C" ~ "Temperate",
"D" ~ "Boreal",
"E" ~ "Polar"),
ai = terra::extract(ai, ., fun = "mean", ID=FALSE) %>% unlist())
ai
koppen
site <- site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_fine = lut_kop[koppen_n],
koppen_coarse = case_match(stringr::str_sub(koppen_fine,1,1),
"B" ~ "Arid",
"A" ~ "Equatorial",
"C" ~ "Temperate",
"D" ~ "Boreal",
"E" ~ "Polar"),
ai = terra::extract(ai, ., fun = "mean", ID=FALSE) %>% unlist())
site$ai
site <- site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_fine = lut_kop[koppen_n],
koppen_coarse = case_match(stringr::str_sub(koppen_fine,1,1),
"B" ~ "Arid",
"A" ~ "Equatorial",
"C" ~ "Temperate",
"D" ~ "Boreal",
"E" ~ "Polar"),
ai = terra::extract(ai, ., fun = "mean", ID=FALSE) %>% unlist()/10000)
site$ai
site <- site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_fine = lut_kop[koppen_n],
koppen_coarse = case_match(stringr::str_sub(koppen_fine,1,1),
"B" ~ "Arid",
"A" ~ "Equatorial",
"C" ~ "Temperate",
"D" ~ "Boreal",
"E" ~ "Polar"),
ai = terra::extract(ai, ., fun = "mean", ID=FALSE) %>% unlist()/10000,
ai_class = case_match(ai,
< 0.03~'Hyper Arid'
site <- site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_fine = lut_kop[koppen_n],
koppen_coarse = case_match(stringr::str_sub(koppen_fine,1,1),
"B" ~ "Arid",
"A" ~ "Equatorial",
"C" ~ "Temperate",
"D" ~ "Boreal",
"E" ~ "Polar"),
ai = terra::extract(ai, ., fun = "mean", ID=FALSE) %>% unlist()/10000,
ai_class = case_when(ai < 0.03 ~ 'Hyper Arid'
ai > 0.03 & <= 0.2 ~ 'Arid'))
site <- site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_fine = lut_kop[koppen_n],
koppen_coarse = case_match(stringr::str_sub(koppen_fine,1,1),
"B" ~ "Arid",
"A" ~ "Equatorial",
"C" ~ "Temperate",
"D" ~ "Boreal",
"E" ~ "Polar"),
ai = terra::extract(ai, ., fun = "mean", ID=FALSE) %>% unlist()/10000)
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_fine = lut_kop[koppen_n],
koppen_coarse = case_match(stringr::str_sub(koppen_fine,1,1),
"B" ~ "Arid",
"A" ~ "Equatorial",
"C" ~ "Temperate",
"D" ~ "Boreal",
"E" ~ "Polar"),
ai = terra::extract(ai, ., fun = "mean", ID=FALSE) %>% unlist()/10000,
ai_class = case_when(ai < 0.03 ~ 'Hyper Arid',
ai > 0.03 & <= 0.2 ~ 'Arid'))
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_fine = lut_kop[koppen_n],
koppen_coarse = case_match(stringr::str_sub(koppen_fine,1,1),
"B" ~ "Arid",
"A" ~ "Equatorial",
"C" ~ "Temperate",
"D" ~ "Boreal",
"E" ~ "Polar"),
ai = terra::extract(ai, ., fun = "mean", ID=FALSE) %>% unlist()/10000,
ai_class = case_when(ai < 0.03 ~ 'Hyper Arid',
ai > 0.03 & < 0.2 ~ 'Arid'))
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_fine = lut_kop[koppen_n],
koppen_coarse = case_match(stringr::str_sub(koppen_fine,1,1),
"B" ~ "Arid",
"A" ~ "Equatorial",
"C" ~ "Temperate",
"D" ~ "Boreal",
"E" ~ "Polar"),
ai = terra::extract(ai, ., fun = "mean", ID=FALSE) %>% unlist()/10000,
ai_class = case_when('ai' < 0.03 ~ 'Hyper Arid',
'ai' > 0.03 & < 0.2 ~ 'Arid'))
site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_fine = lut_kop[koppen_n],
koppen_coarse = case_match(stringr::str_sub(koppen_fine,1,1),
"B" ~ "Arid",
"A" ~ "Equatorial",
"C" ~ "Temperate",
"D" ~ "Boreal",
"E" ~ "Polar"),
ai = terra::extract(ai, ., fun = "mean", ID=FALSE) %>% unlist()/10000,
ai_class = case_when(ai < 0.03 ~ 'Hyper Arid',
ai > 0.03 & ai < 0.2 ~ 'Arid'))
site <- site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_fine = lut_kop[koppen_n],
koppen_coarse = case_match(stringr::str_sub(koppen_fine,1,1),
"B" ~ "Arid",
"A" ~ "Equatorial",
"C" ~ "Temperate",
"D" ~ "Boreal",
"E" ~ "Polar"),
ai = terra::extract(ai, ., fun = "mean", ID=FALSE) %>% unlist()/10000,
ai_class = case_when(ai < 0.03 ~ 'Hyper Arid',
ai >= 0.03 & ai < 0.2 ~ 'Arid',
ai >= 0.2 & ai < 0.5~ 'Semi-Arid',
ai >= 0.5 & ai < 0.65 ~ 'Dry sub-humid',
ai >= 0.65 ~ "Humid"))
site
site$ai_class
sites <- site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_fine = lut_kop[koppen_n],
koppen_coarse = case_match(stringr::str_sub(koppen_fine,1,1),
"B" ~ "Arid",
"A" ~ "Equatorial",
"C" ~ "Temperate",
"D" ~ "Boreal",
"E" ~ "Polar"),
ai = terra::extract(ai, ., fun = "mean", ID=FALSE) %>% unlist()/10000,
ai_class = case_when(ai < 0.03 ~ 'Hyper Arid',
ai >= 0.03 & ai < 0.2 ~ 'Arid',
ai >= 0.2 & ai < 0.5~ 'Semi-Arid',
ai >= 0.5 & ai < 0.65 ~ 'Dry sub-humid',
ai >= 0.65 ~ "Humid"))
sites <- site_polygons %>%
mutate(koppen_n = terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist(),
koppen_fine = lut_kop[koppen_n],
koppen_coarse = case_match(stringr::str_sub(koppen_fine,1,1),
"B" ~ "Arid",
"A" ~ "Equatorial",
"C" ~ "Temperate",
"D" ~ "Boreal",
"E" ~ "Polar"),
ai = terra::extract(ai, ., fun = "mean", ID=FALSE) %>% unlist()/10000,
ai_class = case_when(ai < 0.03 ~ 'Hyper Arid',
ai >= 0.03 & ai < 0.2 ~ 'Arid',
ai >= 0.2 & ai < 0.5~ 'Semi-Arid',
ai >= 0.5 & ai < 0.65 ~ 'Dry sub-humid',
ai >= 0.65 ~ "Humid")) %>%
st_set_geometry(NULL)
sites
sites <- site_polygons %>%
mutate(koppen_fine = lut_kop[terra::extract(koppen, ., fun = "median", ID=FALSE) %>% unlist()],
koppen_coarse = case_match(stringr::str_sub(koppen_fine,1,1),
"B" ~ "Arid",
"A" ~ "Equatorial",
"C" ~ "Temperate",
"D" ~ "Boreal",
"E" ~ "Polar"),
ai = terra::extract(ai, ., fun = "mean", ID=FALSE) %>% unlist()/10000,
ai_class = case_when(ai < 0.03 ~ 'Hyper Arid',
ai >= 0.03 & ai < 0.2 ~ 'Arid',
ai >= 0.2 & ai < 0.5~ 'Semi-Arid',
ai >= 0.5 & ai < 0.65 ~ 'Dry sub-humid',
ai >= 0.65 ~ "Humid")) %>%
st_set_geometry(NULL)
sites
save(sites, "data/sites.rda")
save(sites, file = "data/sites.rda")
document()
document()
rlang::last_trace()
document()
document()
load_all()
document()
check(remote=TRUE)
check(remote=TRUE)
check(remote=TRUE)
sites$ai_class %>% unique()
sites
load_all()
npe_site_ids(by = "ai", ai = "Dry sub-Humid")
npe_site_ids(by = "ai", ai = "Dry sub-humid")
load_all()
npe_site_ids(by = "ai", ai = "Dry sub-humid")
npe_site_ids(by = "ai", ai = "Dry sub-Humid")
npe_site_ids(by = "ai", ai = "Dry sub-humid")
npe_site_ids(by = "ai", ai = "Arid")
sites
dplyr::filter(sites, ai %in% ai_class)
ai <- "Dry sub-humid"
dplyr::filter(sites, ai %in% ai_class)
sites
dplyr::filter(sites, ai %in% ai_class)
dplyr::filter(sites, ai_class %in% ai)
npe_site_ids(by = "domain", domain = "D14")
npe_site_ids(by = "type", type = "all")
npe_site_ids(by = "type", type = "Relocatable")
npe_site_ids(by = "type", type = "Relocatable Terrestrial")
load_all()
npe_site_ids(by = "type", type = "Relocatable Terrestrial")
load_all()
npe_site_ids(by = "domain", domain = "D14")
npe_site_ids(by = "type", type = "Relocatable Terrestrial")
npe_site_ids(by = "koppen", koppen = "Arid")
koppen = "Arid"
by == "koppen"
nchar(koppen) > 3
dplyr::filter(sites, koppen %in% koppen_coarse)
load_all()
npe_site_ids(by = "koppen", koppen = "Arid")
npe_site_ids(by = "koppen", koppen = "Semi-Arid")
npe_site_ids(by = "koppen", koppen = "Semi-arid")
npe_site_ids(by = "koppen", koppen = "Dfa")
load_all()
npe_site_ids(by = "koppen", koppen = "Dfa")
npe_site_ids(by = "ai", ai = "Humid")
load_all()
npe_site_ids(by = "ai", ai = "Humid")
load_all()
npe_site_ids(by = "aridity", aridity = "Humid")
npe_site_ids(by = "aridity", aridity = "Arid")
npe_site_ids(by = "aridity", aridity = "Semi-Arid")
document()
check(remote=TRUE, manual=TRUE)
data("D14")
names(D14)
npe_groundcover(D14)
load_all()
library(devtools)
load_all()
npe_groundcover(D14)
