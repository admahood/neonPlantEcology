bd[counter, 1] <- out[1] %>% unname
bd[counter, 2] <- out[2] %>% unname
bd[counter, 3] <- i
bd[counter, 4] <- j
bd[counter, 5] <- "site"
bd[counter, 6] <- "site"
counter <- counter+1}
}
}
}
# Native vs Invasive cover ===================================================
n_i <- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("I", "N", "UNK")) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID,year, nativeStatusCode) %>%
dplyr::summarise(cover = sum(cover),
total_cover = first(total_cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(rel_cover = cover/total_cover) %>%
dplyr::ungroup()
lut_nsc <-c("cover_native", "cover_exotic", "cover_unknown")
names(lut_nsc) <-  c("N", "I", "UNK")
n_i_cover <- n_i %>%
dplyr::select(site, plotID, subplotID,year, nativeStatusCode, cover) %>%
mutate(nativeStatusCode = lut_nsc[nativeStatusCode]) %>%
tidyr::pivot_wider(names_from = nativeStatusCode,
values_from = cover,
values_fill = list(cover = 0))
n_i_rel_cover <- n_i %>%
dplyr::select(site, plotID, subplotID,year, nativeStatusCode, rel_cover) %>%
mutate(nativeStatusCode = lut_nsc[nativeStatusCode] %>% str_c("rel_",.)) %>%
tidyr::pivot_wider(names_from = nativeStatusCode,
values_from = rel_cover,
values_fill = list(rel_cover = 0))%>%
left_join(n_i_cover, by = c("site", "plotID", "subplotID","year"))
if(sum(names(n_i_rel_cover) %in% "cover_exotic")==0){
n_i_rel_cover <- n_i_rel_cover %>%
mutate(cover_exotic = 0,
rel_cover_exotic = 0)
}
# not exotic cover ===================================================
n_e <- full_on_cover %>%
dplyr::mutate(nativeStatusCode = ifelse(nativeStatusCode !="I", "NE", "I")) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID,year, nativeStatusCode) %>%
dplyr::summarise(cover = sum(cover),
total_cover = first(total_cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(rel_cover = cover/total_cover) %>%
dplyr::ungroup()
lut_ne <-c("cover_notexotic", "cover_exotic")
names(lut_ne) <-  c("NE", "I")
n_e_cover <- n_e %>%
dplyr::select(site, plotID, subplotID,year, nativeStatusCode, cover) %>%
mutate(nativeStatusCode = lut_ne[nativeStatusCode]) %>%
tidyr::pivot_wider(names_from = nativeStatusCode,
values_from = cover,
values_fill = list(cover = 0)) %>%
dplyr::select(-contains("cover_exotic"))
n_e_rel_cover <- n_e %>%
dplyr::select(site, plotID, subplotID,year, nativeStatusCode, rel_cover) %>%
mutate(nativeStatusCode = lut_ne[nativeStatusCode] %>% str_c("rel_",.)) %>%
tidyr::pivot_wider(names_from = nativeStatusCode,
values_from = rel_cover,
values_fill = list(rel_cover = 0))%>%
dplyr::select(-contains("rel_cover_exotic")) %>%
left_join(n_e_cover, by = c("site", "plotID", "subplotID","year"))
# Cover by family ============================================================
if(!is.na(families)){
byfam <- full_on_cover%>%
dplyr::group_by(site, plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID,year, family) %>%
dplyr::summarise(cover = sum(cover),
total_cover = first(total_cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(rel_cover = cover/total_cover) %>%
dplyr::ungroup() %>%
dplyr::filter(family %in% families)
rcf<- byfam%>%
dplyr::select(site, plotID, subplotID,year, family, rel_cover) %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "rel_cover_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0))
cf<- byfam%>%
dplyr::select(site, plotID, subplotID,year, family, cover) %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "cover_",
values_from = (cover),
values_fill = list(cover = 0))
nspp_byfam <- full_on_cover%>%
dplyr::filter(nativeStatusCode %in% c("I", "N", "UNK")) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID,year, family, nativeStatusCode) %>%
dplyr::summarise(nspp = length(unique(scientificName))) %>%
dplyr::ungroup() %>%
dplyr::filter(family %in% families) %>%
tidyr::pivot_wider(names_from = c(family, nativeStatusCode),
names_prefix = "nspp_",
values_from = (nspp),
values_fill = list(nspp = 0))
}
# Cover by species ===========================================================
if(!is.na(spp)){
bysp <- full_on_cover%>%
dplyr::group_by(site, plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID, year, scientificName) %>%
dplyr::summarise(cover = sum(cover),
total_cover = first(total_cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(rel_cover = cover/total_cover) %>%
dplyr::ungroup() %>%
dplyr::mutate(gen = str_split(scientificName,
pattern = " ",
simplify = TRUE)[,1],
sp = str_split(scientificName,
pattern = " ",
simplify = TRUE)[,2],
gen_sp = str_c(gen, " ", sp)) %>%
dplyr::mutate(genus = str_split(scientificName,
pattern = " ",
simplify = TRUE)[,1],
species = str_split(scientificName,
pattern = " ",
simplify = TRUE)[,2],
gen_sp = str_c(genus, " ", species)) %>%
dplyr::filter(gen_sp %in% spp)
rc_sp <- bysp%>%
dplyr::select(site, plotID, subplotID,year, gen_sp, rel_cover) %>%
dplyr::mutate(gen_sp = str_replace(gen_sp, " ","_")) %>%
# the following 3 lines fix some kind of duplicate problem that happened here
# need to fix something upstream - jan 14 fixed it, need to test still
dplyr::group_by(site, plotID, subplotID,year, gen_sp) %>%
dplyr::summarise(rel_cover = mean(rel_cover)) %>%
dplyr::ungroup()%>%
tidyr::pivot_wider(names_from = gen_sp,
names_prefix = "rel_cover_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0))
c_sp<- bysp%>%
dplyr::select(site, plotID, subplotID,year, gen_sp, cover) %>%
dplyr::mutate(gen_sp = str_replace(gen_sp, " ","_")) %>%
# the following 3 lines fix some kind of duplicate problem that happened here
# need to fix something upstream - jan 14 fixed it, need to test still
dplyr::group_by(site, plotID, subplotID,year, gen_sp) %>%
dplyr::summarise(cover = mean(cover)) %>%
dplyr::ungroup()%>%
tidyr::pivot_wider(names_from = gen_sp,
names_prefix = "cover_",
values_from = (cover),
values_fill = list(cover = 0))
}
# by family, divided by biogeographic origin =================================
if(!is.na(families)){
family_stuff <- full_on_cover%>%
dplyr::filter(nativeStatusCode %in% c("I", "N", "UNK")) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID,year, family, nativeStatusCode) %>%
dplyr::summarise(cover = sum(cover),
total_cover = first(total_cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(rel_cover = cover/total_cover) %>%
dplyr::ungroup() %>%
dplyr::filter(family %in% families)
rc_ig<- family_stuff%>%
dplyr::select(site, plotID, subplotID,year, family, nativeStatusCode,rel_cover) %>%
dplyr::filter(nativeStatusCode == "I") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "rc_exotic_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0)) %>%
dplyr::select(-nativeStatusCode)
rc_neg<- family_stuff%>%
dplyr::select(site, plotID, subplotID,year, family, nativeStatusCode,rel_cover) %>%
dplyr::filter(nativeStatusCode != "I") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "rc_notexotic_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0)) %>%
dplyr::select(-nativeStatusCode)
rc_ng<- family_stuff%>%
dplyr::select(site, plotID, subplotID,year, family, nativeStatusCode,rel_cover) %>%
dplyr::filter(nativeStatusCode == "N") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "rc_native_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0)) %>%
dplyr::select(-nativeStatusCode)
c_ig<- family_stuff%>%
dplyr::select(site, plotID, subplotID,year, family, nativeStatusCode,cover) %>%
dplyr::filter(nativeStatusCode == "I") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "cover_exotic_",
values_from = (cover),
values_fill = list(cover = 0)) %>%
dplyr::select(-nativeStatusCode)
c_neg<- family_stuff%>%
dplyr::select(site, plotID, subplotID,year, family, nativeStatusCode,cover) %>%
dplyr::filter(nativeStatusCode != "I") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "cover_notexotic_",
values_from = (cover),
values_fill = list(cover = 0)) %>%
dplyr::select(-nativeStatusCode)
c_ng<- family_stuff%>%
dplyr::select(site, plotID, subplotID,year, family, nativeStatusCode,cover) %>%
dplyr::filter(nativeStatusCode == "N") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "cover_native_",
values_from = (cover),
values_fill = list(cover = 0)) %>%
dplyr::select(-nativeStatusCode)
}
# exotic  diversity and evenness ===============
if(nrow(filter(full_on_cover,nativeStatusCode=="I"))>0){
vegan_friendly_div_ex <- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("I")) %>%
dplyr::group_by(site, plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
nspp_ex <- vegan_friendly_div_ex %>%
dplyr::select(site, plotID, subplotID,year) %>%
mutate(shannon_exotic = vegan::diversity(vegan_friendly_div_ex %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)),
evenness_exotic = shannon_exotic/vegan::specnumber(vegan_friendly_div_ex%>%
dplyr::select(-site, -plotID, -subplotID, -year)),
nspp_exotic = vegan::specnumber(vegan_friendly_div_ex %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)))}else{
nspp_ex<-
template %>%
mutate(shannon_exotic = 0,
evenness_exotic = 0,
nspp_exotic = 0)
}
# native diversity and evenness ===========
vegan_friendly_div_n<- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("N")) %>%
dplyr::group_by(site, plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
nspp_n <- vegan_friendly_div_n %>%
dplyr::select(site, plotID, subplotID,year) %>%
mutate(shannon_native = vegan::diversity(vegan_friendly_div_n %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)),
evenness_native = shannon_native/vegan::specnumber(vegan_friendly_div_n%>%
dplyr::select(-site, -plotID, -subplotID, -year)),
nspp_native = vegan::specnumber(vegan_friendly_div_n %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)))
# unknown diversity and evenness  ========================
vegan_friendly_div_un<- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("UNK")) %>%
dplyr::group_by(site, plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
nspp_un <- vegan_friendly_div_un %>%
dplyr::select(site, plotID, subplotID,year) %>%
mutate(shannon_unknown = vegan::diversity(vegan_friendly_div_un %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)),
evenness_unknown = shannon_unknown/vegan::specnumber(vegan_friendly_div_un%>%
dplyr::select(-site, -plotID, -subplotID, -year)),
nspp_unknown = vegan::specnumber(vegan_friendly_div_un %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)))
# not exotic diversity and evenness  ====================
vegan_friendly_div_nex <- full_on_cover %>%
dplyr::filter(nativeStatusCode != c("I")) %>%
dplyr::group_by(site, plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
nspp_nex <- vegan_friendly_div_nex %>%
dplyr::select(site, plotID, subplotID,year) %>%
mutate(shannon_notexotic = vegan::diversity(vegan_friendly_div_nex %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)),
evenness_notexotic = shannon_notexotic/vegan::specnumber(vegan_friendly_div_nex%>%
dplyr::select(-site, -plotID, -subplotID, -year)),
nspp_notexotic = vegan::specnumber(vegan_friendly_div_nex %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)))
# total vegan::diversity - not splitting between native status =========
vegan_friendly_div_total <- full_on_cover %>%
dplyr::group_by(site, plotID, subplotID, taxonID, year) %>%
dplyr::summarise(cover = sum(cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::filter(nchar(as.character(taxonID))>0) %>%
dplyr::group_by(site, plotID, subplotID,year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
div_total <- dplyr::select(vegan_friendly_div_total, site, plotID, subplotID,year) %>%
mutate(shannon_total = vegan::diversity(vegan_friendly_div_total%>%
dplyr::select(-site, -plotID, -subplotID, -year)),
evenness_total = shannon_total/vegan::specnumber(vegan_friendly_div_total%>%
dplyr::select(-site, -plotID, -subplotID, -year)),
nspp_total = vegan::specnumber(vegan_friendly_div_total%>%
dplyr::select(-site, -plotID, -subplotID, -year)))
# family diversity ===========================================================
vegan_friendly_div_total_f <- full_on_cover %>%
dplyr::filter(!is.na(family)) %>%
dplyr::group_by(site, plotID, subplotID, family, year) %>%
dplyr::summarise(cover = sum(cover)) %>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID,year) %>%
tidyr::spread(family, cover, fill=0) %>%
dplyr::ungroup()
div_total_f <- dplyr::select(vegan_friendly_div_total_f, site, plotID, subplotID,year) %>%
mutate(shannon_family = vegan::diversity(vegan_friendly_div_total_f%>%
dplyr::select(-site, -plotID, -subplotID, -year)),
evenness_family = shannon_family/vegan::specnumber(vegan_friendly_div_total_f%>%
dplyr::select(-site, -plotID, -subplotID, -year)),
nfamilies = vegan::specnumber(vegan_friendly_div_total_f%>%
dplyr::select(-site, -plotID, -subplotID, -year)))
# joining and writing out ------------------------------------------------------
final_table <- template %>%
dplyr::left_join(nspp_ex, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(nspp_nex, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(nspp_n, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(nspp_un, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(n_i_rel_cover, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(n_e_rel_cover, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(div_total, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(div_total_f, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::mutate(scale = scale,
invaded = if_else(cover_exotic > 0, "invaded", "not_invaded"))
if(exists("bd")){
final_table <- final_table %>%
left_join(bd, by = c("site", "plotID", "subplotID", "year"))
}
if(!is.na(families)){
final_table <- final_table %>%
dplyr::left_join(rcf, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(rc_ig, by = c("site", "plotID", "subplotID", "year"))%>%
dplyr::left_join(c_ig, by = c("site", "plotID", "subplotID", "year"))%>%
dplyr::left_join(cf, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(rc_ng, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(c_ng, by = c("site", "plotID", "subplotID", "year"))%>%
dplyr::left_join(rc_neg, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(c_neg, by = c("site", "plotID", "subplotID", "year"))%>%
dplyr::left_join(nspp_byfam, by = c("site", "plotID", "subplotID", "year"))}
if(!is.na(spp)){
final_table <- final_table %>%
dplyr::left_join(rc_sp, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(c_sp, by = c("site", "plotID", "subplotID", "year"))}
# seems crazy, i know... but those NAs should all definitely be zero
final_table <- final_table %>%
mutate_all(funs(replace(., is.na(.), 0))) %>%
unique() # temporary fix, for some reason it's returning repeats of each row - there's mutate somewhere where there needs to be a summarise maybe
return(final_table)
}
get_diversity_info(x)
get_diversity_info(x) %>% view()
devtools::document()
devtools::install()
devtools::install_github("admahood/neondiveRsity")
library(neondiveRsity)
x<- download_plant_div("NIWO")
get_diversity_info(x)
get_diversity_info(x, betadiversity = TRUE)
get_diversity_info(x, betadiversity = TRUE, dissolve_years = TRUE)
get_diversity_info(x, betadiversity = TRUE, dissolve_years = TRUE) %>% view()
get_diversity_info(x, betadiversity = TRUE, dissolve_years = FALSE) %>% view()
full_on_cover <- get_longform_cover(x, dissolve_years = TRUE)
neon_div_object <- x
ten_m <- get_longform_cover(neon_div_object,
scale = "10m",
fix_unks = fix_unks) %>%
dplyr::group_by(site, plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup() %>%
dplyr::select(-subplotID)
get_longform_cover(neon_div_object,
scale = "10m",
fix_unks = fix_unks) %>%
dplyr::group_by(site, plotID, subplotID,taxonID, year)
fix_unks=F
ten_m <- get_longform_cover(neon_div_object,
scale = "10m",
fix_unks = fix_unks) %>%
dplyr::group_by(site, plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup() %>%
dplyr::select(-subplotID)
ten_m
devtools::document()
devtools::install()
library(neondiveRsity)
x<-download_plant_div("MOAB")
get_diversity_info(x, dissolve_years = TRUE)
get_diversity_info(x, dissolve_years = TRUE) %>% view()
get_diversity_info(x, dissolve_years = TRUE, betadiversity = TRUE) %>% view()
neon_div_object = x
fix_unks = F
plot_scale <- get_longform_cover(neon_div_object,
scale = "plot",
fix_unks = fix_unks) %>%
dplyr::group_by(site, plotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup() %>%
dplyr::select(-plotID)
plot_scale
year_range_bd <- unique(plot_scale$year)%>%
as.numeric %>%
range %>%
paste(collapse = "-")
n_years_bd <- length(unique(plot_scale$year))
plot_scale <- plot_scale %>%
group_by(plotID, taxonID, nativeStatusCode, scientificName, family, site, subplotID) %>%
summarise(cover = sum(cover, na.rm=T)/n_years_bd) %>%
ungroup() %>%
mutate(year = year_range_bd)
plot_scale
ten_m <- get_longform_cover(neon_div_object,
scale = "10m",
dissolve_years = dissolve_years,
fix_unks = fix_unks) %>%
dplyr::group_by(site, plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup() %>%
dplyr::select(-subplotID)
dissolve_years<- T
ten_m <- get_longform_cover(neon_div_object,
scale = "10m",
dissolve_years = dissolve_years,
fix_unks = fix_unks) %>%
dplyr::group_by(site, plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup() %>%
dplyr::select(-subplotID)
year_range_bd <- unique(ten_m$year)%>%
as.numeric %>%
range %>%
paste(collapse = "-")
n_years_bd <- length(unique(ten_m$year))
ten_m <- ten_m %>%
group_by(plotID, taxonID, nativeStatusCode, scientificName, family, site, subplotID) %>%
summarise(cover = sum(cover, na.rm=T)/n_years_bd) %>%
ungroup() %>%
mutate(year = year_range_bd)
devtools::document()
devtools::install()
library(neondiveRsity)
x<-download_plant_div("MOAB")
get_diversity_info(x, betadiversity=TRUE, dissolve_years=TRUE) %>% view()
library(tidyverse)
get_diversity_info(x, betadiversity=TRUE, dissolve_years=TRUE) %>% view()
