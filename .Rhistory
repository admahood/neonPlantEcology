vegan_friendly_div_ex<- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("I")) %>%
dplyr::group_by(plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::group_by(plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
# note to self - hard code! gotta fix it
nspp_ex <- vegan_friendly_div_ex %>%
dplyr::select(plotID, subplotID,year) %>%
mutate(shannon_exotic = vegan::diversity(vegan_friendly_div_ex %>%
dplyr::select(-plotID,
-subplotID,
-year)),
nspp_exotic = vegan::specnumber(vegan_friendly_div_ex %>%
dplyr::select(-plotID,
-subplotID,
-year)))
# native ===========
vegan_friendly_div_n<- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("N")) %>%
dplyr::group_by(plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::group_by(plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
nspp_n <- vegan_friendly_div_n %>%
dplyr::select(plotID, subplotID,year) %>%
mutate(shannon_native = vegan::diversity(vegan_friendly_div_n %>%
dplyr::select(-plotID,
-subplotID,
-year)),
nspp_native = vegan::specnumber(vegan_friendly_div_n %>%
dplyr::select(-plotID,
-subplotID,
-year)))
# unknown ========================
vegan_friendly_div_un<- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("UNK")) %>%
dplyr::group_by(plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::group_by(plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
nspp_un <- vegan_friendly_div_un %>%
dplyr::select(plotID, subplotID,year) %>%
mutate(shannon_unknown = vegan::diversity(vegan_friendly_div_un %>%
dplyr::select(-plotID,
-subplotID,
-year)),
nspp_unknown = vegan::specnumber(vegan_friendly_div_un %>%
dplyr::select(-plotID,
-subplotID,
-year)))
# total vegan::diversity - not splitting between native status
vegan_friendly_div_total <- full_on_cover %>%
dplyr::group_by(plotID, subplotID, taxonID, year) %>%
dplyr::summarise(cover = sum(cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::filter(nchar(as.character(taxonID))>0) %>%
dplyr::group_by(plotID, subplotID,year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
div_total <- dplyr::select(vegan_friendly_div_total, plotID, subplotID,year) %>%
mutate(shannon_total = vegan::diversity(vegan_friendly_div_total%>%
dplyr::select(-plotID, -subplotID, -year)),
nspp_total = vegan::specnumber(vegan_friendly_div_total%>%
dplyr::select(-plotID, -subplotID, -year)))
# joining and writing out ------------------------------------------------------
final_table <- dplyr::left_join(nspp_ex,nspp_n, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(nspp_un, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(n_i_cover, by = c("plotID", "subplotID","year")) %>%
dplyr::left_join(n_i_rel_cover, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(div_total, by = c("plotID", "subplotID", "year")) %>%
dplyr::mutate(site = str_sub(plotID, 1,4),
scale = scale,
invaded = if_else(cover_exotic > 0, "invaded", "not_invaded"))%>%
dplyr::mutate(scale = factor(scale, levels = c("1m","10m","100m", "plot")))
if(!is.na(families)){
final_table <- final_table %>%
dplyr::left_join(rcf, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(rc_ig, by = c("plotID", "subplotID", "year"))%>%
dplyr::left_join(c_ig, by = c("plotID", "subplotID", "year"))%>%
dplyr::left_join(cf, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(rc_ng, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(c_ng, by = c("plotID", "subplotID", "year"))%>%
dplyr::left_join(nspp_byfam, by = c("plotID", "subplotID", "year"))}
if(!is.na(spp)){
final_table <- final_table %>%
dplyr::left_join(rc_sp, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(c_sp, by = c("plotID", "subplotID", "year"))}
# seems crazy, i know... but those NAs should all definitely be zero
final_table[is.na(final_table)] <- 0
return(final_table)
}
devtools::document()
devtools::install()
neondiveRsity::get_diversity_info(download_plant_div("SRER"), scale="site")
devtools::document()
devtools::install()
neondiveRsity::get_diversity_info(download_plant_div("SRER"), scale="site")
devtools::install()
devtools::document()
devtools::install()
neon_diversity_object <- download_plant_div("SRER")
get_longform_cover(neon_div_object = neon_div_object, scale = "site")
get_longform_cover(neon_div_object = neon_diversity_object, scale = "site")
neon_div_object <- neon_diversity_object
scale = "site"
full_on_cover <- get_longform_cover(neon_div_object,
scale = scale,
fix_unks = fix_unks)
fix_unks = F
full_on_cover <- get_longform_cover(neon_div_object,
scale = scale,
fix_unks = fix_unks)
n_i <- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("I", "N", "UNK")) %>%
dplyr::group_by(plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(plotID, subplotID,year, nativeStatusCode) %>%
dplyr::summarise(cover = sum(cover),
total_cover = first(total_cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(rel_cover = cover/total_cover) %>%
dplyr::ungroup()
n_i_cover <- n_i %>%
dplyr::select(plotID, subplotID,year, nativeStatusCode, cover) %>%
tidyr::pivot_wider(names_from = nativeStatusCode,
values_from = cover,
values_fill = list(cover = 0)) %>%
dplyr::rename(cover_native = N,
cover_exotic = I,
cover_unk = UNK)
n_i_rel_cover <- n_i %>%
dplyr::select(plotID, subplotID,year, nativeStatusCode, rel_cover) %>%
tidyr::pivot_wider(names_from = nativeStatusCode,
values_from = rel_cover,
values_fill = list(rel_cover = 0))%>%
dplyr::rename(rel_cover_native = N,
rel_cover_exotic = I,
rel_cover_unk = UNK)
n_i_rel_cover
families = c("Poaceae")
# Cover by family ============================================================
if(!is.na(families)){
byfam <- full_on_cover%>%
dplyr::group_by(plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(plotID, subplotID,year, family) %>%
dplyr::summarise(cover = sum(cover),
total_cover = first(total_cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(rel_cover = cover/total_cover) %>%
dplyr::ungroup() %>%
dplyr::filter(family %in% families)
rcf<- byfam%>%
dplyr::select(plotID, subplotID,year, family, rel_cover) %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "rel_cover_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0))
cf<- byfam%>%
dplyr::select(plotID, subplotID,year, family, cover) %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "cover_",
values_from = (cover),
values_fill = list(cover = 0))
nspp_byfam <- full_on_cover%>%
dplyr::filter(nativeStatusCode %in% c("I", "N", "UNK")) %>%
dplyr::group_by(plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(plotID, subplotID,year, family, nativeStatusCode) %>%
dplyr::summarise(nspp = length(unique(scientificName))) %>%
dplyr::ungroup() %>%
dplyr::filter(family %in% families) %>%
tidyr::pivot_wider(names_from = c(family,nativeStatusCode),
names_prefix = "nspp_",
values_from = (nspp),
values_fill = list(nspp = 0))
}
nspp_byfam
spp <- "Bromus tectorum"
# Cover by species ===========================================================
if(!is.na(spp)){
bysp <- full_on_cover%>%
dplyr::group_by(plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(plotID, subplotID, year, scientificName) %>%
dplyr::summarise(cover = sum(cover),
total_cover = first(total_cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(rel_cover = cover/total_cover) %>%
dplyr::ungroup() %>%
dplyr::mutate(gen = str_split(scientificName,
pattern = " ",
simplify = TRUE)[,1],
sp = str_split(scientificName,
pattern = " ",
simplify = TRUE)[,2],
gen_sp = str_c(gen, " ", sp)) %>%
dplyr::mutate(genus = str_split(scientificName,
pattern = " ",
simplify = TRUE)[,1],
species = str_split(scientificName,
pattern = " ",
simplify = TRUE)[,2],
gen_sp = str_c(genus, " ", species)) %>%
dplyr::filter(gen_sp %in% spp)
rc_sp <- bysp%>%
dplyr::select(plotID, subplotID,year, gen_sp, rel_cover) %>%
dplyr::mutate(gen_sp = str_replace(gen_sp, " ","_")) %>%
# the following 3 lines fix some kind of duplicate problem that happened here
# need to fix something upstream - jan 14 fixed it, need to test still
dplyr::group_by(plotID, subplotID,year, gen_sp) %>%
dplyr::summarise(rel_cover = mean(rel_cover)) %>%
dplyr::ungroup()%>%
tidyr::pivot_wider(names_from = gen_sp,
names_prefix = "rel_cover_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0))
c_sp<- bysp%>%
dplyr::select(plotID, subplotID,year, gen_sp, cover) %>%
dplyr::mutate(gen_sp = str_replace(gen_sp, " ","_")) %>%
# the following 3 lines fix some kind of duplicate problem that happened here
# need to fix something upstream - jan 14 fixed it, need to test still
dplyr::group_by(plotID, subplotID,year, gen_sp) %>%
dplyr::summarise(cover = mean(cover)) %>%
dplyr::ungroup()%>%
tidyr::pivot_wider(names_from = gen_sp,
names_prefix = "cover_",
values_from = (cover),
values_fill = list(cover = 0))
}
c_sp
# by family, divided by biogeographic origin =================================
if(!is.na(families)){
exotic_grass <- full_on_cover%>%
dplyr::filter(nativeStatusCode %in% c("I", "N", "UNK")) %>%
dplyr::group_by(plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(plotID, subplotID,year, family, nativeStatusCode) %>%
dplyr::summarise(cover = sum(cover),
total_cover = first(total_cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(rel_cover = cover/total_cover) %>%
dplyr::ungroup() %>%
dplyr::filter(family %in% families)
rc_ig<- exotic_grass%>%
dplyr::select(plotID, subplotID,year, family, nativeStatusCode,rel_cover) %>%
dplyr::filter(nativeStatusCode == "I") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "rc_exotic_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0)) %>%
dplyr::select(-nativeStatusCode)
rc_ng<- exotic_grass%>%
dplyr::select(plotID, subplotID,year, family, nativeStatusCode,rel_cover) %>%
dplyr::filter(nativeStatusCode == "N") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "rc_native_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0)) %>%
dplyr::select(-nativeStatusCode)
c_ig<- exotic_grass%>%
dplyr::select(plotID, subplotID,year, family, nativeStatusCode,cover) %>%
dplyr::filter(nativeStatusCode == "I") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "cover_exotic_",
values_from = (cover),
values_fill = list(cover = 0)) %>%
dplyr::select(-nativeStatusCode)
c_ng<- exotic_grass%>%
dplyr::select(plotID, subplotID,year, family, nativeStatusCode,cover) %>%
dplyr::filter(nativeStatusCode == "N") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "cover_native_",
values_from = (cover),
values_fill = list(cover = 0)) %>%
dplyr::select(-nativeStatusCode)
}
c_ng
c_ig
# vegan::diversity indexes splitting between native status ==========================
# exotic ===============
vegan_friendly_div_ex<- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("I")) %>%
dplyr::group_by(plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::group_by(plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
# note to self - hard code! gotta fix it
nspp_ex <- vegan_friendly_div_ex %>%
dplyr::select(plotID, subplotID,year) %>%
mutate(shannon_exotic = vegan::diversity(vegan_friendly_div_ex %>%
dplyr::select(-plotID,
-subplotID,
-year)),
nspp_exotic = vegan::specnumber(vegan_friendly_div_ex %>%
dplyr::select(-plotID,
-subplotID,
-year)))
nspp_ex
# native ===========
vegan_friendly_div_n<- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("N")) %>%
dplyr::group_by(plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::group_by(plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
vegan_friendly_div_n
nspp_n <- vegan_friendly_div_n %>%
dplyr::select(plotID, subplotID,year) %>%
mutate(shannon_native = vegan::diversity(vegan_friendly_div_n %>%
dplyr::select(-plotID,
-subplotID,
-year)),
nspp_native = vegan::specnumber(vegan_friendly_div_n %>%
dplyr::select(-plotID,
-subplotID,
-year)))
nspp_n
# unknown ========================
vegan_friendly_div_un<- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("UNK")) %>%
dplyr::group_by(plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::group_by(plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
vegan_friendly_div_un
nspp_un <- vegan_friendly_div_un %>%
dplyr::select(plotID, subplotID,year) %>%
mutate(shannon_unknown = vegan::diversity(vegan_friendly_div_un %>%
dplyr::select(-plotID,
-subplotID,
-year)),
nspp_unknown = vegan::specnumber(vegan_friendly_div_un %>%
dplyr::select(-plotID,
-subplotID,
-year)))
nspp_un
# total vegan::diversity - not splitting between native status
vegan_friendly_div_total <- full_on_cover %>%
dplyr::group_by(plotID, subplotID, taxonID, year) %>%
dplyr::summarise(cover = sum(cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::filter(nchar(as.character(taxonID))>0) %>%
dplyr::group_by(plotID, subplotID,year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
div_total <- dplyr::select(vegan_friendly_div_total, plotID, subplotID,year) %>%
mutate(shannon_total = vegan::diversity(vegan_friendly_div_total%>%
dplyr::select(-plotID, -subplotID, -year)),
nspp_total = vegan::specnumber(vegan_friendly_div_total%>%
dplyr::select(-plotID, -subplotID, -year)))
# joining and writing out ------------------------------------------------------
final_table <- dplyr::left_join(nspp_ex,nspp_n, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(nspp_un, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(n_i_cover, by = c("plotID", "subplotID","year")) %>%
dplyr::left_join(n_i_rel_cover, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(div_total, by = c("plotID", "subplotID", "year")) %>%
dplyr::mutate(site = str_sub(plotID, 1,4),
scale = scale,
invaded = if_else(cover_exotic > 0, "invaded", "not_invaded"))%>%
dplyr::mutate(scale = factor(scale, levels = c("1m","10m","100m", "plot")))
if(!is.na(families)){
final_table <- final_table %>%
dplyr::left_join(rcf, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(rc_ig, by = c("plotID", "subplotID", "year"))%>%
dplyr::left_join(c_ig, by = c("plotID", "subplotID", "year"))%>%
dplyr::left_join(cf, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(rc_ng, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(c_ng, by = c("plotID", "subplotID", "year"))%>%
dplyr::left_join(nspp_byfam, by = c("plotID", "subplotID", "year"))}
if(!is.na(spp)){
final_table <- final_table %>%
dplyr::left_join(rc_sp, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(c_sp, by = c("plotID", "subplotID", "year"))}
# seems crazy, i know... but those NAs should all definitely be zero
final_table[is.na(final_table)] <- 0
final_table
final_table[is.na(final_table)]
is.na(final_table)
final_table
replace_na(final_table)
replace_na(final_table, 0)
replace_na(final_table, list(0))
replace_na(final_table, list(0))$cover_Brom
replace_na(final_table, list(0))$cover_Bromus_tectorum
?replace_na
# seems crazy, i know... but those NAs should all definitely be zero
for(i in colnames(final_table){
print(i)
}
final_table[is.na(final_table)] <- 0
return(final_table)
}
# seems crazy, i know... but those NAs should all definitely be zero
for(i in colnames(final_table){
print(i)
}
final_table[is.na(final_table)] <- 0
return(final_table)
}
nal_table)){
print(i)
}
colnames(final_table)
for(i in colnames(final_table)){
print(i)
}
# seems crazy, i know... but those NAs should all definitely be zero
for(i in colnames(final_table)){
print(i)
final_table <- replace_na(final_table, list(i = 0))
}
final_table$cover_Bromus_tectorum
# seems crazy, i know... but those NAs should all definitely be zero
final_table <- final_table %>%mutate_all(funs(replace(., is.na(.), 0)))
final_table$cover_Bromus_tectorum
glimpse(final_table)
xx<- get_diversity_info(neon_div_object)
x
xx
glimpse(xx)
xx<- get_diversity_info(neon_div_object, scale = "site")
scale
full_on_cover <- get_longform_cover(neon_div_object,
scale = scale,
fix_unks = fix_unks)
full_on_cover
scale = "plot"
full_on_cover <- get_longform_cover(neon_div_object,
scale = scale,
fix_unks = fix_unks)
full_on_cover
scale = "site"
full_on_cover <- get_longform_cover(neon_div_object,
scale = scale,
fix_unks = fix_unks)
full_on_cover
devtools::document()
devtools::install()
xx <- get_diversity_info(neon_div_object, "site")
xx
xx[,15:20]
xx[,5:15]
xx <- get_diversity_info(neon_div_object, "site", spp = "Bromus tectorum")
glimpse(xx)
get_longform_cover(neon_div_object)
get_longform_cover(neon_div_object) %>% pull(taxonID)
get_longform_cover(neon_div_object) %>% pull(taxonID) %>% unique()
# joining and writing out ------------------------------------------------------
final_table <- dplyr::left_join(nspp_ex,nspp_n, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(nspp_un, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(n_i_cover, by = c("plotID", "subplotID","year")) %>%
dplyr::left_join(n_i_rel_cover, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(div_total, by = c("plotID", "subplotID", "year")) %>%
dplyr::mutate(site = str_sub(plotID, 1,4),
scale = scale,
invaded = if_else(cover_exotic > 0, "invaded", "not_invaded"))%>%
dplyr::mutate(scale = factor(scale, levels = c("1m","10m","100m", "plot", "site")))
# seems crazy, i know... but those NAs should all definitely be zero
final_table <- final_table %>%
mutate_all(funs(replace(., is.na(.), 0)))
final_table
glimpse(final_table)
# joining and writing out ------------------------------------------------------
final_table <- dplyr::left_join(nspp_ex,nspp_n, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(nspp_un, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(n_i_cover, by = c("plotID", "subplotID","year")) %>%
dplyr::left_join(n_i_rel_cover, by = c("plotID", "subplotID", "year")) %>%
dplyr::left_join(div_total, by = c("plotID", "subplotID", "year")) %>%
dplyr::mutate(site = str_sub(plotID, 1,4),
scale = scale,
invaded = if_else(cover_exotic > 0, "invaded", "not_invaded"))
# seems crazy, i know... but those NAs should all definitely be zero
final_table <- final_table %>%
mutate_all(funs(replace(., is.na(.), 0)))
devtools::document()
devtools::install()
?get_diversity_info()
