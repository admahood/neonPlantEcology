values_fill = list(rel_cover = 0))
cf<- byfam |>
dplyr::select(site, plotID, subplotID,eventID, family, cover) |>
tidyr::pivot_wider(names_from = family,
names_prefix = "cover_",
values_from = (cover),
values_fill = list(cover = 0))
nspp_byfam <- full_on_cover |>
dplyr::filter(nativeStatusCode %in% c("I", "N", "UNK")) |>
dplyr::group_by(site, plotID, subplotID, eventID) |>
dplyr::mutate(total_cover = sum(cover)) |>
dplyr::ungroup() |>
dplyr::group_by(site, plotID, subplotID,eventID, family, nativeStatusCode) |>
dplyr::summarise(nspp = length(unique(scientificName))) |>
dplyr::ungroup() |>
dplyr::filter(family %in% families) |>
tidyr::pivot_wider(names_from = c(family, nativeStatusCode),
names_prefix = "nspp_",
values_from = (nspp),
values_fill = list(nspp = 0))
}
# by family, divided by biogeographic origin =================================
if(!is.na(families)){
family_stuff <- full_on_cover |>
dplyr::filter(nativeStatusCode %in% c("I", "N", "UNK")) |>
dplyr::group_by(site, plotID, subplotID, eventID) |>
dplyr::mutate(total_cover = sum(cover)) |>
dplyr::ungroup() |>
dplyr::group_by(site, plotID, subplotID,eventID, family, nativeStatusCode) |>
dplyr::summarise(cover = sum(cover),
total_cover = first(total_cover)) |>
dplyr::ungroup() |>
dplyr::mutate(rel_cover = cover/total_cover) |>
dplyr::ungroup() |>
dplyr::filter(family %in% families)
rc_ig<- family_stuff |>
dplyr::select(site, plotID, subplotID,eventID, family, nativeStatusCode,rel_cover) |>
dplyr::filter(nativeStatusCode == "I") |>
tidyr::pivot_wider(names_from = family,
names_prefix = "rc_exotic_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0)) |>
dplyr::select(-nativeStatusCode)
rc_neg<- family_stuff |>
dplyr::select(site, plotID, subplotID,eventID, family, nativeStatusCode,rel_cover) |>
dplyr::filter(nativeStatusCode != "I") |>
tidyr::pivot_wider(names_from = family,
names_prefix = "rc_notexotic_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0)) |>
dplyr::select(-nativeStatusCode)
rc_ng<- family_stuff |>
dplyr::select(site, plotID, subplotID,eventID, family, nativeStatusCode,rel_cover) |>
dplyr::filter(nativeStatusCode == "N") |>
tidyr::pivot_wider(names_from = family,
names_prefix = "rc_native_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0)) |>
dplyr::select(-nativeStatusCode)
c_ig<- family_stuff |>
dplyr::select(site, plotID, subplotID,eventID, family, nativeStatusCode,cover) |>
dplyr::filter(nativeStatusCode == "I") |>
tidyr::pivot_wider(names_from = family,
names_prefix = "cover_exotic_",
values_from = (cover),
values_fill = list(cover = 0)) |>
dplyr::select(-nativeStatusCode)
c_neg<- family_stuff |>
dplyr::select(site, plotID, subplotID,eventID, family, nativeStatusCode,cover) |>
dplyr::filter(nativeStatusCode != "I") |>
tidyr::pivot_wider(names_from = family,
names_prefix = "cover_notexotic_",
values_from = (cover),
values_fill = list(cover = 0)) |>
dplyr::select(-nativeStatusCode)
c_ng<- family_stuff |>
dplyr::select(site, plotID, subplotID,eventID, family, nativeStatusCode,cover) |>
dplyr::filter(nativeStatusCode == "N") |>
tidyr::pivot_wider(names_from = family,
names_prefix = "cover_native_",
values_from = (cover),
values_fill = list(cover = 0)) |>
dplyr::select(-nativeStatusCode)
}
# exotic  diversity and evenness ===============
if(nrow(dplyr::filter(full_on_cover,nativeStatusCode=="I"))>0){
vegan_friendly_div_ex <- full_on_cover |>
dplyr::filter(nativeStatusCode %in% c("I")) |>
dplyr::group_by(site, plotID, subplotID,taxonID, eventID) |>
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) |>
dplyr::ungroup() |>
dplyr::group_by(site, plotID, subplotID, eventID) |>
tidyr::spread(taxonID, cover, fill=0) |>
dplyr::ungroup()
nspp_ex <- vegan_friendly_div_ex |>
dplyr::select(site, plotID, subplotID,eventID) |>
dplyr::mutate(shannon_exotic = vegan::diversity(vegan_friendly_div_ex |>
dplyr::select(-site,
-plotID,
-subplotID,
-eventID)),
evenness_exotic = shannon_exotic/vegan::specnumber(vegan_friendly_div_ex |>
dplyr::select(-site, -plotID, -subplotID, -eventID)),
nspp_exotic = vegan::specnumber(vegan_friendly_div_ex |>
dplyr::select(-site,
-plotID,
-subplotID,
-eventID)))}else{
nspp_ex<-
template |>
dplyr::mutate(shannon_exotic = 0,
evenness_exotic = 0,
nspp_exotic = 0)
}
# native diversity and evenness ===========
vegan_friendly_div_n<- full_on_cover |>
dplyr::filter(nativeStatusCode %in% c("N")) |>
dplyr::group_by(site, plotID, subplotID,taxonID, eventID) |>
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) |>
dplyr::ungroup() |>
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) |>
dplyr::group_by(site, plotID, subplotID, eventID) |>
tidyr::spread(taxonID, cover, fill=0) |>
dplyr::ungroup()
nspp_n <- vegan_friendly_div_n |>
dplyr::select(site, plotID, subplotID,eventID) |>
dplyr::mutate(shannon_native = vegan::diversity(vegan_friendly_div_n |>
dplyr::select(-site,
-plotID,
-subplotID,
-eventID)),
evenness_native = shannon_native/vegan::specnumber(vegan_friendly_div_n |>
dplyr::select(-site, -plotID, -subplotID, -eventID)),
nspp_native = vegan::specnumber(vegan_friendly_div_n |>
dplyr::select(-site,
-plotID,
-subplotID,
-eventID)))
# unknown diversity and evenness  ========================
vegan_friendly_div_un<- full_on_cover |>
dplyr::filter(nativeStatusCode %in% c("UNK")) |>
dplyr::group_by(site, plotID, subplotID,taxonID, eventID) |>
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) |>
dplyr::ungroup() |>
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) |>
dplyr::group_by(site, plotID, subplotID, eventID) |>
tidyr::spread(taxonID, cover, fill=0) |>
dplyr::ungroup()
nspp_un <- vegan_friendly_div_un |>
dplyr::select(site, plotID, subplotID,eventID) |>
dplyr::mutate(shannon_unknown = vegan::diversity(vegan_friendly_div_un |>
dplyr::select(-site,
-plotID,
-subplotID,
-eventID)),
evenness_unknown = shannon_unknown/vegan::specnumber(vegan_friendly_div_un |>
dplyr::select(-site, -plotID, -subplotID, -eventID)),
nspp_unknown = vegan::specnumber(vegan_friendly_div_un |>
dplyr::select(-site,
-plotID,
-subplotID,
-eventID)))
# not exotic diversity and evenness  ====================
vegan_friendly_div_nex <- full_on_cover |>
dplyr::filter(nativeStatusCode != c("I")) |>
dplyr::group_by(site, plotID, subplotID,taxonID, eventID) |>
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) |>
dplyr::ungroup() |>
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) |>
dplyr::group_by(site, plotID, subplotID, eventID) |>
tidyr::spread(taxonID, cover, fill=0) |>
dplyr::ungroup()
nspp_nex <- vegan_friendly_div_nex |>
dplyr::select(site, plotID, subplotID,eventID) |>
dplyr::mutate(shannon_notexotic = vegan::diversity(vegan_friendly_div_nex |>
dplyr::select(-site,
-plotID,
-subplotID,
-eventID)),
evenness_notexotic = shannon_notexotic/vegan::specnumber(vegan_friendly_div_nex |>
dplyr::select(-site, -plotID, -subplotID, -eventID)),
nspp_notexotic = vegan::specnumber(vegan_friendly_div_nex |>
dplyr::select(-site,
-plotID,
-subplotID,
-eventID)))
# total vegan::diversity - not splitting between native status =========
vegan_friendly_div_total <- full_on_cover |>
dplyr::group_by(site, plotID, subplotID, taxonID, eventID) |>
dplyr::summarise(cover = sum(cover)) |>
dplyr::ungroup() |>
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) |>
dplyr::filter(nchar(as.character(taxonID))>0) |>
dplyr::group_by(site, plotID, subplotID,eventID) |>
tidyr::spread(taxonID, cover, fill=0) |>
dplyr::ungroup()
div_total <- dplyr::select(vegan_friendly_div_total, site, plotID, subplotID,eventID) |>
dplyr::mutate(shannon_total = vegan::diversity(vegan_friendly_div_total |>
dplyr::select(-site, -plotID, -subplotID, -eventID)),
evenness_total = shannon_total/vegan::specnumber(vegan_friendly_div_total |>
dplyr::select(-site, -plotID, -subplotID, -eventID)),
nspp_total = vegan::specnumber(vegan_friendly_div_total |>
dplyr::select(-site, -plotID, -subplotID, -eventID)))
# family diversity ===========================================================
vegan_friendly_div_total_f <- full_on_cover |>
dplyr::filter(!is.na(family)) |>
dplyr::group_by(site, plotID, subplotID, family, eventID) |>
dplyr::summarise(cover = sum(cover)) |>
dplyr::ungroup() |>
dplyr::group_by(site, plotID, subplotID,eventID) |>
tidyr::spread(family, cover, fill=0) |>
dplyr::ungroup()
div_total_f <- dplyr::select(vegan_friendly_div_total_f, site, plotID, subplotID,eventID) |>
dplyr::mutate(shannon_family = vegan::diversity(vegan_friendly_div_total_f |>
dplyr::select(-site, -plotID, -subplotID, -eventID)),
evenness_family = shannon_family/vegan::specnumber(vegan_friendly_div_total_f |>
dplyr::select(-site, -plotID, -subplotID, -eventID)),
nfamilies = vegan::specnumber(vegan_friendly_div_total_f |>
dplyr::select(-site, -plotID, -subplotID, -eventID)))
# joining and writing out ------------------------------------------------------
final_table <- template |>
dplyr::left_join(nspp_ex, by = c("site", "plotID", "subplotID", "eventID")) |>
dplyr::left_join(nspp_nex, by = c("site", "plotID", "subplotID", "eventID")) |>
dplyr::left_join(nspp_n, by = c("site", "plotID", "subplotID", "eventID")) |>
dplyr::left_join(nspp_un, by = c("site", "plotID", "subplotID", "eventID")) |>
dplyr::left_join(n_i_rel_cover, by = c("site", "plotID", "subplotID", "eventID")) |>
dplyr::left_join(n_e_rel_cover, by = c("site", "plotID", "subplotID", "eventID")) |>
dplyr::left_join(div_total, by = c("site", "plotID", "subplotID", "eventID")) |>
dplyr::left_join(div_total_f, by = c("site", "plotID", "subplotID", "eventID")) |>
dplyr::mutate(scale = scale,
invaded = ifelse(cover_exotic > 0, "invaded", "not_invaded"))
if(exists("bd")){
final_table <- final_table |>
dplyr::left_join(bd, by = c("site", "plotID", "subplotID", "eventID"))
}
if(!is.na(families)){
final_table <- final_table |>
dplyr::left_join(rcf, by = c("site", "plotID", "subplotID", "eventID")) |>
dplyr::left_join(rc_ig, by = c("site", "plotID", "subplotID", "eventID")) |>
dplyr::left_join(c_ig, by = c("site", "plotID", "subplotID", "eventID")) |>
dplyr::left_join(cf, by = c("site", "plotID", "subplotID", "eventID")) |>
dplyr::left_join(rc_ng, by = c("site", "plotID", "subplotID", "eventID")) |>
dplyr::left_join(c_ng, by = c("site", "plotID", "subplotID", "eventID")) |>
dplyr::left_join(rc_neg, by = c("site", "plotID", "subplotID", "eventID")) |>
dplyr::left_join(c_neg, by = c("site", "plotID", "subplotID", "eventID")) |>
dplyr::left_join(nspp_byfam, by = c("site", "plotID", "subplotID", "eventID"))}
# seems crazy, i know... but those NAs should all definitely be zero
final_table <- final_table |>
dplyr::mutate_all(list(~ replace(., is.na(.), 0))) |>
unique() # temporary fix, for some reason it's returning repeats of each row - there's mutate somewhere where there needs to be a summarise maybe
return(final_table)
}
D14 |> npe_diversity_info()
document()
rm(list = c("npe_diversity_info"))
document()
check()
install()
library(devtools)
use_release_issue()
use_cran_comments()
use_github_links()
git_credentials()
urlchecker::url_check()
devtools::check(remote = TRUE, manual = TRUE)
load_all()
devtools::check(remote = TRUE, manual = TRUE)
data("D14")
npe_longform("D14") |> npe_name_cleaner()
npe_longform(D14)
npe_longform(D14) |> npe_name_cleaner()
load_all()
npe_longform(D14) |> npe_name_cleaner()
load_all()
npe_longform(D14) |> npe_name_cleaner()
npe_longform(D14) |> npe_name_cleaner() |> dplyr::pull(scientificName) %>% unique()
npe_longform(D14) |> npe_name_cleaner() |> dplyr::pull(scientificName) |> unique()
devtools::check(remote = TRUE, manual = TRUE)
> d14_sites <- npe_site_ids(domain = "D14")
d14_sites <- npe_site_ids(domain = "D14")
d14_sites
npe_site_ids
load_all()
d14_sites <- npe_site_ids(domain = "D14")
devtools::check(remote = TRUE, manual = TRUE)
document()
build()
document()
build()
install()
library(devtools)
load_all()
document()
check()
load_all()
npe_site_ids
npe_site_ids()
load_all()
document()
check()
resave_data
data("sites")
sites
data("D14")
dim(D14)
length(D14)
names(D14)
data("plot_centroids")
plot_centroids
document()
load_all()
document()
load_all()
document()
check()
check()
load_all()
document()
check()
load_all()
document()
load_all()
document()
check()
load_all()
document()
check()
load_all()
document()
data("sites")
sites
save(sites, file = "data/sites.rda", compress = "xz")
data("D14")
save(D14, file = "data/sites.rda", compress = "bzip2")
sites
save(sites, file = "data/sites.rda", compress = "xz")
save(D14, file = "data/D14.rda", compress = "bzip2")
data("plot_centroids")
save(plot_centroids, file = "data/plot_centroids.rda", compress = "xz")
document()
check()
urlchecker::url_check()
urlchecker::url_check()
devtools::check(remote = TRUE, manual = TRUE)
devtools::check_win_devel()
devtools::check_win_devel()
devtools::check_win_devel()
usethis::use_version('patch')
usethis::use_version('patch')
usethis::use_version('patch')
devtools::submit_cran()
version()
version
library(devtools)
library(devtools)
load_all()
document()
check()
install()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
options(rmarkdown.html_vignette.check_title = FALSE)
library(dplyr)
library(tidyr)
library(stringr)
library(ggplot2)
library(neonPlantEcology)
library(vegan)
library(sf)
library(ggpubr)
# D14 <- npe_site_ids(domain = "D14") |>
#   npe_download_plant_div(sites = .)
data("D14")
comm <- npe_community_matrix(D14)
comm[1:4, 1:4]
data("plot_centroids")
plot_centroids <- sf::st_set_geometry(plot_centroids, NULL)
metadata <- npe_plot_info(comm) |>
dplyr::left_join(plot_centroids)
# checking the metadata file to see where JORN stops and SRER begins
which(metadata$site == "JORN") |> range()
which(metadata$site == "SRER") |> range()
# performing and plotting the species accumulation curve analysis
sp_jorn <- vegan::specaccum(comm[1:152,])
sp_srer <- vegan::specaccum(comm[152:347,])
plot(sp_srer, col = "blue")
plot(sp_jorn, col = "gold", add=T)
nmds <- metaMDS(comm,trace = F)
nmds_sites <- nmds$points |>
as_tibble(rownames = "rowname") |>
left_join(metadata)
ggplot(nmds_sites, aes(x=MDS1, y=MDS2, color = eventID, size = elevation, shape = site)) +
geom_point() +
theme_classic() +
scale_color_brewer(palette = "Set1") +
theme(panel.background = element_rect(fill=NA, color= "black"))
di <- npe_diversity_info(D14, scale = "site", timescale = "all")
dj<- di |>
dplyr::select(site, eventID, starts_with("nspp")) |>
tidyr::pivot_longer(cols = starts_with("nspp")) |>
dplyr::filter(!name %in% c("nspp_notexotic", "nspp_total")) |>
dplyr::transmute(origin = str_remove_all(name, "nspp_"),
nspp = value,
site=site)
p1<-ggplot(dj, aes(x=nspp, y=site, fill = origin)) +
geom_bar(stat = "identity", color = "black", lwd = .2) +
xlab("Species Richness") +
ylab("Site")
dk<- di |>
dplyr::select(site, eventID, starts_with("rel_cover")) |>
pivot_longer(cols = starts_with("rel_cover")) |>
filter(!name %in% c("rel_cover_notexotic", "rel_cover_total")) |>
transmute(origin = str_remove_all(name, "rel_cover_"),
relative_cover = value,
site=site)
p2<- ggplot(dk, aes(x=relative_cover, y=site, fill = origin)) +
geom_bar(stat = "identity", color = "black", lwd = .2) +
xlab("Relative Cover")
dl <- di|>
dplyr::select(site, eventID, starts_with("shannon")) |>
pivot_longer(cols = starts_with("shannon")) |>
filter(!name %in% c("shannon_notexotic", "shannon_total", "shannon_family")) |>
transmute(origin = str_remove_all(name, "shannon_"),
shannon = value,
site=site)
p3<- ggplot(dl, aes(x = shannon, y = site, fill = origin)) +
geom_bar(stat = 'identity', color = "black", lwd = .2) +
xlab("Shannon-Weaver Diveristy")
ggpubr::ggarrange(p1,
p2 + theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()),
p3 + theme(axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()),
nrow=1, ncol=3,
common.legend = TRUE,
widths = c(1.35,1,1))
data("D14")
lf <- npe_longform(D14, scale = "plot", timescale = "annual")
lf_f <- lf |>
mutate(family = ifelse(!family %in% c("Poaceae", "Fabaceae"), "Other", family)) |>
group_by(site, plotID, eventID, family) |>
summarise(cover = sum(cover, na.rm=T)) |>
ungroup()
ggplot(lf_f, aes(x=eventID, y=cover, fill = family)) +
geom_boxplot(position="dodge") +
facet_wrap(~site, scales = "free_x")
ggplot(lf_f, aes(x=eventID, y=cover, fill = family)) +
geom_boxplot(position="dodge") +
facet_wrap(~site, scales = "free_x") +
theme_classic()
ggplot(lf_f, aes(x=eventID, y=cover, fill = family)) +
geom_boxplot(position="dodge") +
facet_wrap(~site, scales = "free_x") +
theme_classic2()
ggplot(lf_f, aes(x=eventID, y=cover, fill = family)) +
geom_boxplot(position="dodge") +
facet_wrap(~site, scales = "free_x") +
theme_classic2() +
ylab("Cover") +
xlab("eventID (Year)")
ggplot(lf_f, aes(x=eventID, y=cover, fill = family)) +
geom_boxplot(position="dodge") +
facet_wrap(~site, scales = "free_x") +
theme_classic2() +
scale_color_brewer(palette = "Set1", name = "Family") +
ylab("Cover") +
xlab("eventID (Year)")
ggplot(lf_f, aes(x=eventID, y=cover, fill = family)) +
geom_boxplot(position="dodge") +
facet_wrap(~site, scales = "free_x") +
theme_bw() +
scale_color_brewer(palette = "Set1", name = "Family") +
ylab("Cover") +
xlab("eventID (Year)")
ggplot(lf_f, aes(x=eventID, y=cover, fill = family)) +
geom_boxplot(position="dodge") +
facet_wrap(~site, scales = "free_x") +
theme_bw() +
scale_color_brewer(palette = "Set1", name = "Family") +
ylab("Cover") +
xlab("eventID (Year)")
ggplot(lf_f, aes(x=eventID, y=cover, fill = family)) +
geom_boxplot(position="dodge") +
facet_wrap(~site, scales = "free_x") +
theme_bw() +
scale_fill_brewer(palette = "Set1", name = "Family") +
ylab("Cover") +
xlab("eventID (Year)")
ggplot(lf_f, aes(x=eventID, y=cover, fill = family)) +
geom_boxplot(position="dodge") +
facet_wrap(~site, scales = "free_x") +
theme_bw() +
scale_fill_brewer(palette = "Set1", name = "Family") +
ylab("Cover") +
xlab("eventID (Annual Timestep)")
p <- ggplot(lf_f, aes(x=eventID, y=cover, fill = family)) +
geom_boxplot(position="dodge") +
facet_wrap(~site, scales = "free_x") +
theme_bw() +
scale_fill_brewer(palette = "Set1", name = "Family") +
ylab("Cover") +
xlab("eventID (Annual Timestep)")
ggsave(plot = p, filename = "fig4.png", bg = "white", width = 6.5, height = 3.5)
ggsave(plot = p, filename = "fig4.png", bg = "white", width = 7.5, height = 3.5)
