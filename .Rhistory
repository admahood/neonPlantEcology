family = first(family)) |>
dplyr::ungroup() |>
dplyr::filter(taxonID != "") |>
dplyr::group_by(plotID, taxonID, eventID) |>
dplyr::summarise(cover = sum(cover, na.rm=TRUE)/ifelse(as.numeric(stringr::str_sub(eventID,8,11))< 2019, 8,6),
nativeStatusCode = first(nativeStatusCode),
scientificName = first(scientificName),
family = first(family)) |>
dplyr::ungroup() |>
tibble::as_tibble()
full_on_cover <- dplyr::bind_rows(cover, traces) |>
dplyr::group_by(plotID, taxonID, eventID, nativeStatusCode, scientificName, family) |>
dplyr::summarise(cover = sum(cover)) |>
dplyr::ungroup() |>
tidyr::replace_na(list(family = "Unknown")) |>
dplyr::mutate(site = stringr::str_sub(plotID, 1,4),
subplotID = "plot")
full_on_cover <- full_on_cover |>
tidyr::separate(eventID, into = c("site_plot", "bout", "eventID"),sep = "\\.",remove = F)
cover <- neon_div_object$div_1m2Data |>
dtplyr::lazy_dt() |>
dplyr::mutate(eventID = stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(endDate = as.Date(endDate)) |>
dplyr::filter(divDataType == "plantSpecies") |>
tidyr::replace_na(list(percentCover=trace_cover)) |>
dplyr::filter(taxonID != "") |>
dplyr::group_by(plotID, taxonID, eventID) |>
dplyr::summarise(cover = sum(percentCover, na.rm=TRUE)/ifelse(as.numeric(stringr::str_sub(eventID,8,11))< 2019, 8,6),
nativeStatusCode = first(nativeStatusCode),
scientificName = first(scientificName),
family = first(family)) |>
dplyr::ungroup() |>
tibble::as_tibble()
traces <- neon_div_object$div_10m2Data100m2Data |>
dtplyr::lazy_dt() |>
dplyr::mutate(eventID =stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(endDate = as.Date(endDate)) |>
dplyr::filter(targetTaxaPresent == "Y") |>
dplyr::group_by(plotID, subplotID, taxonID, eventID) |>
dplyr::summarise(cover = trace_cover,
scientificName = first(scientificName),
nativeStatusCode = first(nativeStatusCode),
family = first(family)) |>
dplyr::ungroup() |>
dplyr::filter(taxonID != "") |>
dplyr::group_by(plotID, taxonID, eventID) |>
dplyr::summarise(cover = sum(cover, na.rm=TRUE)/ifelse(as.numeric(stringr::str_sub(eventID,8,11))< 2019, 8,6),
nativeStatusCode = first(nativeStatusCode),
scientificName = first(scientificName),
family = first(family)) |>
dplyr::ungroup() |>
tibble::as_tibble()
full_on_cover <- dplyr::bind_rows(cover, traces) |>
dplyr::group_by(plotID, taxonID, eventID, nativeStatusCode, scientificName, family) |>
dplyr::summarise(cover = sum(cover)) |>
dplyr::ungroup() |>
tidyr::replace_na(list(family = "Unknown")) |>
dplyr::mutate(site = stringr::str_sub(plotID, 1,4),
subplotID = "plot")
full_on_cover
full_on_cover |>
tidyr::separate(eventID, into = c("site_plot", "bout", "eventID"),sep = "\\.",remove = F)
full_on_cover$eventID
full_on_cover$eventID  %>% unique()
full_on_cover %>% filter(eventID == "JORN022")
summary(full_on_cover)
full_on_cover$eventID  %>% unique() %>% sort()
traces$eventID %>% unique() %>% sort()
cover$eventID %>% unique()
neon_div_object$div_10m2Data100m2Data |>
# dtplyr::lazy_dt() |>
dplyr::mutate(eventID = stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(endDate = as.Date(endDate)) |>
dplyr::filter(targetTaxaPresent == "Y") |>
dplyr::group_by(plotID, subplotID, taxonID, eventID) |>
dplyr::summarise(cover = trace_cover,
scientificName = first(scientificName),
nativeStatusCode = first(nativeStatusCode),
family = first(family)) |>
dplyr::ungroup()
neon_div_object$div_10m2Data100m2Data |>
# dtplyr::lazy_dt() |>
dplyr::mutate(eventID = stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(endDate = as.Date(endDate)) |>
dplyr::filter(targetTaxaPresent == "Y") |>
dplyr::group_by(plotID, subplotID, taxonID, eventID) |>
dplyr::summarise(cover = trace_cover,
scientificName = first(scientificName),
nativeStatusCode = first(nativeStatusCode),
family = first(family)) |>
dplyr::ungroup() |>
dplyr::filter(taxonID != "") |>
dplyr::group_by(plotID, taxonID, eventID) |>
dplyr::summarise(cover = sum(cover, na.rm=TRUE)/ifelse(as.numeric(stringr::str_sub(eventID,8,11))< 2019, 8,6),
nativeStatusCode = first(nativeStatusCode),
scientificName = first(scientificName),
family = first(family)) |>
dplyr::ungroup()
full_on_cover %>% filter(eventID == "JORN022")
traces
traces %>% filter(eventID == "JORN022")
trace_cover
traces <- neon_div_object$div_10m2Data100m2Data |>
dtplyr::lazy_dt() |>
dplyr::mutate(eventID = stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
# dplyr::mutate(endDate = as.Date(endDate)) |>
dplyr::filter(targetTaxaPresent == "Y") |>
dplyr::group_by(plotID, subplotID, taxonID, eventID) |>
dplyr::summarise(cover = trace_cover,
scientificName = first(scientificName),
nativeStatusCode = first(nativeStatusCode),
family = first(family)) |>
dplyr::ungroup() |>
dplyr::filter(taxonID != "") |>
dplyr::group_by(plotID, taxonID, eventID) |>
dplyr::summarise(cover = sum(cover, na.rm=TRUE)/ifelse(as.numeric(stringr::str_sub(eventID,8,11))< 2019, 8,6),
nativeStatusCode = first(nativeStatusCode),
scientificName = first(scientificName),
family = first(family)) |>
dplyr::ungroup() |>
tibble::as_tibble()
traces
traces <- neon_div_object$div_10m2Data100m2Data |>
dtplyr::lazy_dt() |>
dplyr::mutate(eventID = stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(endDate = as.Date(endDate)) |>
dplyr::filter(targetTaxaPresent == "Y") |>
dplyr::group_by(plotID, subplotID, taxonID, eventID) |>
dplyr::summarise(cover = trace_cover,
endDate = first(endDate),
scientificName = first(scientificName),
nativeStatusCode = first(nativeStatusCode),
family = first(family)) |>
dplyr::ungroup() |>
dplyr::filter(taxonID != "") |>
dplyr::group_by(plotID, taxonID, eventID) |>
dplyr::summarise(cover = sum(cover, na.rm=TRUE)/ifelse(as.numeric(stringr::str_sub(eventID,8,11))< 2019, 8,6),
nativeStatusCode = first(nativeStatusCode),
scientificName = first(scientificName),
endDate = first(endDate),
family = first(family)) |>
dplyr::ungroup() |>
tibble::as_tibble()
traces %>% filter(eventID == "JORN022")
traces %>% filter(eventID == "JORN.1.2022")
traces <- neon_div_object$div_10m2Data100m2Data |>
dtplyr::lazy_dt() |>
dplyr::mutate(eventID = stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(eventID = stringr::str_replace_all(eventID, "JORN022", "JORN.1.2022")) |>
dplyr::mutate(endDate = as.Date(endDate)) |>
dplyr::filter(targetTaxaPresent == "Y") |>
dplyr::group_by(plotID, subplotID, taxonID, eventID) |>
dplyr::summarise(cover = trace_cover,
# endDate = first(endDate),
scientificName = first(scientificName),
nativeStatusCode = first(nativeStatusCode),
family = first(family)) |>
dplyr::ungroup() |>
dplyr::filter(taxonID != "") |>
dplyr::group_by(plotID, taxonID, eventID) |>
dplyr::summarise(cover = sum(cover, na.rm=TRUE)/ifelse(as.numeric(stringr::str_sub(eventID,8,11))< 2019, 8,6),
nativeStatusCode = first(nativeStatusCode),
scientificName = first(scientificName),
# endDate = first(endDate),
family = first(family)) |>
dplyr::ungroup() |>
tibble::as_tibble()
full_on_cover <- dplyr::bind_rows(cover, traces) |>
dplyr::group_by(plotID, taxonID, eventID, nativeStatusCode, scientificName, family) |>
dplyr::summarise(cover = sum(cover)) |>
dplyr::ungroup() |>
tidyr::replace_na(list(family = "Unknown")) |>
dplyr::mutate(site = stringr::str_sub(plotID, 1,4),
subplotID = "plot")
full_on_cover |>
tidyr::separate(eventID, into = c("site_plot", "bout", "eventID"),sep = "\\.",remove = F)
full_on_cover <- full_on_cover |>
tidyr::separate(eventID, into = c("site_plot", "bout", "eventID"),sep = "\\.",remove = F)
year_range <- unique(full_on_cover$eventID) |>
as.numeric() |>
range() |>
paste(collapse = "-")
n_years <- length(unique(full_on_cover$eventID))
full_on_cover <- full_on_cover |>
dplyr::group_by(plotID, taxonID, nativeStatusCode, scientificName,
family, site, subplotID) |>
dplyr::summarise(cover = sum(cover, na.rm=T)/n_years) |>
dplyr::ungroup() |>
dplyr::mutate(eventID = year_range)
full_on_cover <- dplyr::bind_rows(cover, traces) |>
dplyr::group_by(plotID, taxonID, eventID, nativeStatusCode, scientificName, family) |>
dplyr::summarise(cover = sum(cover)) |>
dplyr::ungroup() |>
tidyr::replace_na(list(family = "Unknown")) |>
dplyr::mutate(site = stringr::str_sub(plotID, 1,4),
subplotID = "plot")
full_on_cover <- full_on_cover  |>
tidyr::separate(eventID, into = c("site_plot", "bout", "eventID"),
sep = "\\.",remove = F)
full_on_cover <- full_on_cover |>
dplyr::group_by(plotID, taxonID, nativeStatusCode, scientificName,
family, site, subplotID,eventID) |>
dplyr::summarise(cover = max(cover, na.rm=T)) |>
dplyr::ungroup()
full_on_cover
full_on_cover <- dplyr::bind_rows(cover, traces) |>
dplyr::group_by(plotID, taxonID, eventID, nativeStatusCode, scientificName, family) |>
dplyr::summarise(cover = sum(cover)) |>
dplyr::ungroup() |>
tidyr::replace_na(list(family = "Unknown")) |>
dplyr::mutate(site = stringr::str_sub(plotID, 1,4),
subplotID = "plot")
full_on_cover <- full_on_cover |>
tidyr::separate(eventID, into = c("site_plot", "bout", "eventID"),sep = "\\.",remove = F)
year_range <- unique(full_on_cover$eventID) |>
as.numeric() |>
range() |>
paste(collapse = "-")
n_years <- length(unique(full_on_cover$eventID))
full_on_cover <- full_on_cover |>
dplyr::group_by(plotID, taxonID, nativeStatusCode, scientificName,
family, site, subplotID) |>
dplyr::summarise(cover = sum(cover, na.rm=T)/n_years) |>
dplyr::ungroup() |>
dplyr::mutate(eventID = year_range)
full_on_cover
load_all()
npe_longform(d14_new)
npe_community_matrix(d14_new)
npe_diversity_info(d14_new)
npe_longform(d14_new, scale = "10m")
npe_longform(d14_new, scale = "100m")
npe_longform(d14_new, scale = "1m")
npe_longform(d14_new, scale = "1m") %>% pull(subplot) %>% unique()
npe_longform(d14_new, scale = "1m") %>% pull(subplotID) %>% unique()
# cover 8 ===========
cover8 <- neon_div_object$div_1m2Data |>
dtplyr::lazy_dt() |>
dplyr::mutate(eventID =stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(eventID = stringr::str_replace_all(eventID, "JORN022", "JORN.1.2022")) |>
dplyr::filter(divDataType == "plantSpecies") |>
tidyr::replace_na(list(percentCover=trace_cover)) |>
dplyr::select(plotID, subplotID, taxonID, eventID, cover = percentCover,
nativeStatusCode, scientificName, family) |>
dplyr::filter(taxonID != "") |>
dplyr::mutate(subplotID = stringr::str_sub(subplotID, 1, 4)) |>
tidyr::replace_na(list(family = "Unknown")) |>
tibble::as_tibble()
# traces8 (10m2) ==============
traces8 <- neon_div_object$div_10m2Data100m2Data |>
dtplyr::lazy_dt() |>
dplyr::mutate(eventID =stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(eventID = stringr::str_replace_all(eventID, "JORN022", "JORN.1.2022")) |>
dplyr::group_by(plotID, subplotID, taxonID, eventID, scientificName,
nativeStatusCode, family) |>
dplyr::summarise(cover = trace_cover) |>
dplyr::ungroup() |>
dplyr::filter(taxonID != "",
subplotID != "31", # these are the 100m2 subplots under which two 1m2 and 10m2 pairs are nested
subplotID != "32",
subplotID != "40",
subplotID != "41")  |>
dplyr::mutate(subplotID = stringr::str_sub(subplotID, 1, 4)) |>
tidyr::replace_na(list(family = "Unknown")) |>
tibble::as_tibble()
neon_div_object$div_10m2Data100m2Data |>
dtplyr::lazy_dt() |>
dplyr::mutate(eventID =stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(eventID = stringr::str_replace_all(eventID, "JORN022", "JORN.1.2022")) |>
dplyr::group_by(plotID, subplotID, taxonID, eventID, scientificName,
nativeStatusCode, family) |>
dplyr::summarise(cover = trace_cover) |>
dplyr::ungroup()
neon_div_object$div_10m2Data100m2Data |>
dtplyr::lazy_dt() |>
dplyr::mutate(eventID =stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(eventID = stringr::str_replace_all(eventID, "JORN022", "JORN.1.2022"))
neon_div_object$div_10m2Data100m2Data |>
dtplyr::lazy_dt() |>
dplyr::mutate(eventID =stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(eventID = stringr::str_replace_all(eventID, "JORN022", "JORN.1.2022")) |>
dplyr::group_by(plotID, subplotID, taxonID, eventID, scientificName,
nativeStatusCode, family) |>
dplyr::summarise(cover = trace_cover)
neon_div_object$div_10m2Data100m2Data |>
dtplyr::lazy_dt() |>
dplyr::mutate(eventID =stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(eventID = stringr::str_replace_all(eventID, "JORN022", "JORN.1.2022")) |>
dplyr::group_by(plotID, subplotID, taxonID, eventID, scientificName,
nativeStatusCode, family) |>
dplyr::summarise(cover = trace_cover) |>
dplyr::ungroup() |>
dplyr::filter(taxonID != "",
!str_detect(subplotID) != "_100")  |> # these are the 100m2 subplots under which two 1m2 and 10m2 pairs are nested
dplyr::mutate(subplotID = stringr::str_sub(subplotID, 1, 4)) |>
tidyr::replace_na(list(family = "Unknown")) |>
tibble::as_tibble()
neon_div_object$div_10m2Data100m2Data |>
dtplyr::lazy_dt() |>
dplyr::mutate(eventID =stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(eventID = stringr::str_replace_all(eventID, "JORN022", "JORN.1.2022")) |>
dplyr::group_by(plotID, subplotID, taxonID, eventID, scientificName,
nativeStatusCode, family) |>
dplyr::summarise(cover = trace_cover) |>
dplyr::ungroup() |>
dplyr::filter(taxonID != "",
!str_detect(subplotID, "_100"))  |> # these are the 100m2 subplots under which two 1m2 and 10m2 pairs are nested
dplyr::mutate(subplotID = stringr::str_sub(subplotID, 1, 4)) |>
tidyr::replace_na(list(family = "Unknown")) |>
tibble::as_tibble()
neon_div_object$div_10m2Data100m2Data |> pull(subplotID) %>% unique()
neon_div_object$div_10m2Data100m2Data |> pull(subplotID) %>% unique()
dtplyr::lazy_dt() |>
dplyr::mutate(eventID =stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(eventID = stringr::str_replace_all(eventID, "JORN022", "JORN.1.2022")) |>
dplyr::group_by(plotID, subplotID, taxonID, eventID, scientificName,
nativeStatusCode, family) |>
dplyr::summarise(cover = trace_cover) |>
dplyr::ungroup() |>
dplyr::filter(taxonID != "",
!str_detect(subplotID, "_100"))  |> # these are the 100m2 subplots under which two 1m2 and 10m2 pairs are nested
dplyr::mutate(subplotID = stringr::str_remove_all(subplotID, "_10")) |>
tidyr::replace_na(list(family = "Unknown")) |>
tibble::as_tibble()
neon_div_object$div_10m2Data100m2Data |> pull(subplotID) %>% unique()
dtplyr::lazy_dt() |>
dplyr::mutate(eventID =stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(eventID = stringr::str_replace_all(eventID, "JORN022", "JORN.1.2022")) |>
dplyr::group_by(plotID, subplotID, taxonID, eventID, scientificName,
nativeStatusCode, family) |>
dplyr::summarise(cover = trace_cover) |>
dplyr::ungroup() |>
dplyr::filter(taxonID != "",
!str_detect(subplotID, "_100"))  |> # these are the 100m2 subplots under which two 1m2 and 10m2 pairs are nested
dplyr::mutate(subplotID = stringr::str_remove_all(subplotID, "_10")) |>
tidyr::replace_na(list(family = "Unknown")) |>
tibble::as_tibble()
neon_div_object$div_10m2Data100m2Data |> pull(subplotID) %>% unique()
dtplyr::lazy_dt() |>
dplyr::mutate(eventID =stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(eventID = stringr::str_replace_all(eventID, "JORN022", "JORN.1.2022")) |>
dplyr::group_by(plotID, subplotID, taxonID, eventID, scientificName,
nativeStatusCode, family) |>
dplyr::summarise(cover = trace_cover) |>
dplyr::ungroup() |>
dplyr::filter(taxonID != "",
!str_detect(subplotID, "_100"))
neon_div_object$div_10m2Data100m2Data |> pull(subplotID) %>% unique()
dtplyr::lazy_dt() |>
dplyr::mutate(eventID =stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(eventID = stringr::str_replace_all(eventID, "JORN022", "JORN.1.2022")) |>
dplyr::group_by(plotID, subplotID, taxonID, eventID, scientificName,
nativeStatusCode, family) |>
dplyr::summarise(cover = trace_cover) |>
dplyr::ungroup()
neon_div_object$div_10m2Data100m2Data |>
dtplyr::lazy_dt() |>
dplyr::mutate(eventID =stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(eventID = stringr::str_replace_all(eventID, "JORN022", "JORN.1.2022")) |>
dplyr::group_by(plotID, subplotID, taxonID, eventID, scientificName,
nativeStatusCode, family) |>
dplyr::summarise(cover = trace_cover) |>
dplyr::ungroup() |>
dplyr::filter(taxonID != "",
!str_detect(subplotID, "_100"))  |> # these are the 100m2 subplots under which two 1m2 and 10m2 pairs are nested
dplyr::mutate(subplotID = stringr::str_remove_all(subplotID, "_10")) |>
tidyr::replace_na(list(family = "Unknown")) |>
tibble::as_tibble()
# traces8 (10m2) ==============
traces8 <- neon_div_object$div_10m2Data100m2Data |>
dtplyr::lazy_dt() |>
dplyr::mutate(eventID =stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(eventID = stringr::str_replace_all(eventID, "JORN022", "JORN.1.2022")) |>
dplyr::group_by(plotID, subplotID, taxonID, eventID, scientificName,
nativeStatusCode, family) |>
dplyr::summarise(cover = trace_cover) |>
dplyr::ungroup() |>
dplyr::filter(taxonID != "",
!str_detect(subplotID, "_100"))  |> # these are the 100m2 subplots under which two 1m2 and 10m2 pairs are nested
dplyr::mutate(subplotID = stringr::str_remove_all(subplotID, "_10")) |>
tidyr::replace_na(list(family = "Unknown")) |>
tibble::as_tibble()
traces8 %>% pull(subplotID) %>% unique()
# traces8 (10m2) ==============
traces8 <- neon_div_object$div_10m2Data100m2Data |>
dtplyr::lazy_dt() |>
dplyr::mutate(eventID =stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(eventID = stringr::str_replace_all(eventID, "JORN022", "JORN.1.2022")) |>
dplyr::group_by(plotID, subplotID, taxonID, eventID, scientificName,
nativeStatusCode, family) |>
dplyr::summarise(cover = trace_cover) |>
dplyr::ungroup() |>
dplyr::filter(taxonID != "",
!str_detect(subplotID, "_100"))  |> # these are the 100m2 subplots under which two 1m2 and 10m2 pairs are nested
# dplyr::mutate(subplotID = stringr::str_remove_all(subplotID, "_10")) |>
tidyr::replace_na(list(family = "Unknown")) |>
tibble::as_tibble()
# traces100s ========
traces100s <- neon_div_object$div_10m2Data100m2Data |>
dtplyr::lazy_dt() |>
dplyr::mutate(eventID =stringr::str_remove_all(eventID, "\\_\\d{3}")) |>
dplyr::mutate(eventID = stringr::str_replace_all(eventID, "JORN022", "JORN.1.2022")) |>
dplyr::filter(targetTaxaPresent == "Y") |>
dplyr::group_by(plotID, subplotID, taxonID, eventID, scientificName,
nativeStatusCode, family) |>
dplyr::summarise(cover = trace_cover) |>
dplyr::ungroup() |>
dplyr::mutate(site = stringr::str_sub(plotID, 1,4)) |>
dplyr::filter(taxonID != "",
str_detect(subplotID, "_100"))  |>
tidyr::replace_na(list(family = "Unknown")) |>
tibble::as_tibble()
traces100s
load_all()
npe_longform(d14_new)
d14_new$div_1m2Data$subplotID %>% unique()
new_subs <- d14_new$div_1m2Data$subplotID %>% unique()
new_subs
old_subs <- D14$div_1m2Data$subplotID %>% unique()
old_subs
lut_subplots <- old_subs
names(lut_subplots) <- new_subs
old_subs[lut_subplots]
lut_subplots <- new_subs
names(lut_subplots) <- old_subs
old_subs[lut_subplots]
lut_subplots[old_subs]
lut_subplots <- old_subs
names(lut_subplots) <- new_subs
lut_subplots[old_subs]
old_subs
old_subs <- D14$div_10m2Data100m2Data$subplotID %>% unique()
new_subs <- d14_new$div_10m2Data100m2Data$subplotID %>% unique()
old_subs
new_subs
load_all()
D14updated <- update_subplots(D14)
npe_longform(D14updated)
npe_longform(D14)
npe_longform(D14, scale = "subplot")
npe_longform(D14, scale = "10m")
#' subplot names of the Plant Presence and Percent Cover raw list object
#' from the old format to the new format, to ensure backwards
#' compatibility. This is mostly an internal helper function
#'
#' @examples
#' data("D14")
#' D14_updated <- update_subplots(D14)
#'
#' @returns a
#' @export
npe_update_subplots <- function(neon_div_object){
requireNamespace("stringr")
lut_subplots <- c( "40_1_1", "40_1_3", "31_1_1", "31_1_4", "41_1_4", "41_1_1",
"32_1_2", "32_1_4",
"40_100",  "41_100", "31_100", "32_100",
"40_10_1", "40_10_3", "41_10_1", "41_10_4",
"31_10_1","31_10_4", "32_10_2", "32_10_4",
"40_1_1", "40_1_3", "31_1_1", "31_1_4", "41_1_4", "41_1_1",
"32_1_2", "32_1_4",
"40_100",  "41_100", "31_100", "32_100",
"40_10_1", "40_10_3", "41_10_1", "41_10_4",
"31_10_1","31_10_4", "32_10_2", "32_10_4")
names(lut_subplots) <- c("40.1.1", "40.3.1", "31.1.1", "31.4.1", "41.4.1", "41.1.1",
"32.2.1", "32.4.1",
"40", "41", "31", "32",
"40.1.10", "40.3.10","41.1.10","41.4.10",
"31.1.10","31.4.10","32.2.10","32.4.10",
"40_1_1", "40_1_3", "31_1_1", "31_1_4", "41_1_4", "41_1_1",
"32_1_2", "32_1_4",
"40_100",  "41_100", "31_100", "32_100",
"40_10_1", "40_10_3", "41_10_1", "41_10_4",
"31_10_1","31_10_4", "32_10_2", "32_10_4")
neon_div_object$div_1m2Data$subplotID <- lut_subplots[neon_div_object$div_1m2Data$subplotID]
neon_div_object$div_10m2Data100m2Data$subplotID <- lut_subplots[neon_div_object$div_10m2Data100m2Data$subplotID]
return(neon_div_object)
}
npe_longform(D14 %>% npe_update_subplots(), scale = "10m")
load_all()
data("D14")
D14_release23 <- D14
save(D14_release23, "data/D14_release23.rda")
save(D14_release23, file = "data/D14_release23.rda")
D14 <- d14_new
save(D14, file = "data/D14.rda")
D14$readme_10058
d14_new$readme_10058
document()
check(remote = T, manual = T)
check(remote = T, manual = T)
data("D14")
save(D14, file = "data/D14.rda", compress = TRUE)
data("D14_release23")
save(D14_release23, file = "data/D14_release23.rda", compress = TRUE)
?data
check(remote = T, manual = T)
install()
library(devtools)
use_release_issue()
urlchecker::url_check()
devtools::check_win_devel()
devtools::submit_cran()
load_all()
library(devtools)
load_all()
library(neonPlantEcology)
D14 <- npe_site_ids(domain = c("D14")) %>%
npe_download(sites = .)
library(tidyverse)
library(neonPlantEcology)
D14 <- npe_site_ids(domain = c("D14")) %>%
npe_download(sites = .)
