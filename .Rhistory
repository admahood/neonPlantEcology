cover_unk = UNK)
n_i_cover
n_i_rel_cover <- n_i %>%
dplyr::select(site, plotID, subplotID,year, nativeStatusCode, rel_cover) %>%
tidyr::pivot_wider(names_from = nativeStatusCode,
values_from = rel_cover,
values_fill = list(rel_cover = 0))%>%
dplyr::rename(rel_cover_native = N,
rel_cover_exotic = I,
rel_cover_unk = UNK)
families = "Poaceae"
exotic_grass <- full_on_cover%>%
dplyr::filter(nativeStatusCode %in% c("I", "N", "UNK")) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID,year, family, nativeStatusCode) %>%
dplyr::summarise(cover = sum(cover),
total_cover = first(total_cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(rel_cover = cover/total_cover) %>%
dplyr::ungroup() %>%
dplyr::filter(family %in% families)
exotic_grass
rc_ig<- exotic_grass%>%
dplyr::select(site, plotID, subplotID,year, family, nativeStatusCode,rel_cover) %>%
dplyr::filter(nativeStatusCode == "I") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "rc_exotic_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0)) %>%
dplyr::select(-nativeStatusCode)
rc_ng<- exotic_grass%>%
dplyr::select(site, plotID, subplotID,year, family, nativeStatusCode,rel_cover) %>%
dplyr::filter(nativeStatusCode == "N") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "rc_native_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0)) %>%
dplyr::select(-nativeStatusCode)
c_ig<- exotic_grass%>%
dplyr::select(site, plotID, subplotID,year, family, nativeStatusCode,cover) %>%
dplyr::filter(nativeStatusCode == "I") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "cover_exotic_",
values_from = (cover),
values_fill = list(cover = 0)) %>%
dplyr::select(-nativeStatusCode)
c_ng<- exotic_grass%>%
dplyr::select(site, plotID, subplotID,year, family, nativeStatusCode,cover) %>%
dplyr::filter(nativeStatusCode == "N") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "cover_native_",
values_from = (cover),
values_fill = list(cover = 0)) %>%
dplyr::select(-nativeStatusCode)
c_ng
# vegan::diversity indexes splitting between native status ==========================
# exotic ===============
vegan_friendly_div_ex<- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("I")) %>%
dplyr::group_by(site, plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
# note to self - hard code! gotta fix it
nspp_ex <- vegan_friendly_div_ex %>%
dplyr::select(site, plotID, subplotID,year) %>%
mutate(shannon_exotic = vegan::diversity(vegan_friendly_div_ex %>%
dplyr::select(-plotID,
-subplotID,
-year)),
nspp_exotic = vegan::specnumber(vegan_friendly_div_ex %>%
dplyr::select(-plotID,
-subplotID,
-year)))
# note to self - hard code! gotta fix it
nspp_ex <- vegan_friendly_div_ex %>%
dplyr::select(site, plotID, subplotID,year) %>%
mutate(shannon_exotic = vegan::diversity(vegan_friendly_div_ex %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)),
nspp_exotic = vegan::specnumber(vegan_friendly_div_ex %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)))
nspp_ex
# native ===========
vegan_friendly_div_n<- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("N")) %>%
dplyr::group_by(site, plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
nspp_n <- vegan_friendly_div_n %>%
dplyr::select(site, plotID, subplotID,year) %>%
mutate(shannon_native = vegan::diversity(vegan_friendly_div_n %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)),
nspp_native = vegan::specnumber(vegan_friendly_div_n %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)))
nspp_n
# unknown ========================
vegan_friendly_div_un<- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("UNK")) %>%
dplyr::group_by(site, plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
nspp_un <- vegan_friendly_div_un %>%
dplyr::select(site, plotID, subplotID,year) %>%
mutate(shannon_unknown = vegan::diversity(vegan_friendly_div_un %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)),
nspp_unknown = vegan::specnumber(vegan_friendly_div_un %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)))
# total vegan::diversity - not splitting between native status
vegan_friendly_div_total <- full_on_cover %>%
dplyr::group_by(site, plotID, subplotID, taxonID, year) %>%
dplyr::summarise(cover = sum(cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::filter(nchar(as.character(taxonID))>0) %>%
dplyr::group_by(site, plotID, subplotID,year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
div_total <- dplyr::select(vegan_friendly_div_total, site, plotID, subplotID,year) %>%
mutate(shannon_total = vegan::diversity(vegan_friendly_div_total%>%
dplyr::select(-site, -plotID, -subplotID, -year)),
nspp_total = vegan::specnumber(vegan_friendly_div_total%>%
dplyr::select(-site, -plotID, -subplotID, -year)))
#' This can be a concatenated vector if the user want more than one family.
#' @param species Which specific species should the metrics be calculated for?
#' This can be a concatenated vector if the user want more than one species.
#' @examples
#' x <- download_plant_div("SRER")
#' plot_level <- neondiversity::get_diversity_info(neon_div_object = x, scale = "plot")
#' hot_deserts <- c("JORN", "SRER) %>%
#'   download_plant_div() %>%
#'   get_diversity_info(scale = "site")
#' @export
get_diversity_info <- function(neon_div_object,
scale = "plot",
trace_cover = 0.5,
fix_unks = FALSE,
name_cleaner = FALSE,
families = NA,
spp = NA) {
require(tidyverse)
require(vegan)
# Data wrangling =============================================================
full_on_cover <- get_longform_cover(neon_div_object,
scale = scale,
fix_unks = fix_unks)
if(name_cleaner) full_on_cover <- name_cleaner(full_on_cover)
# Native vs Invasive cover ===================================================
n_i <- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("I", "N", "UNK")) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID,year, nativeStatusCode) %>%
dplyr::summarise(cover = sum(cover),
total_cover = first(total_cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(rel_cover = cover/total_cover) %>%
dplyr::ungroup()
n_i_cover <- n_i %>%
dplyr::select(site, plotID, subplotID,year, nativeStatusCode, cover) %>%
tidyr::pivot_wider(names_from = nativeStatusCode,
values_from = cover,
values_fill = list(cover = 0)) %>%
dplyr::rename(cover_native = N,
cover_exotic = I,
cover_unk = UNK)
n_i_rel_cover <- n_i %>%
dplyr::select(site, plotID, subplotID,year, nativeStatusCode, rel_cover) %>%
tidyr::pivot_wider(names_from = nativeStatusCode,
values_from = rel_cover,
values_fill = list(rel_cover = 0))%>%
dplyr::rename(rel_cover_native = N,
rel_cover_exotic = I,
rel_cover_unk = UNK)
# Cover by family ============================================================
if(!is.na(families)){
byfam <- full_on_cover%>%
dplyr::group_by(site, plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID,year, family) %>%
dplyr::summarise(cover = sum(cover),
total_cover = first(total_cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(rel_cover = cover/total_cover) %>%
dplyr::ungroup() %>%
dplyr::filter(family %in% families)
rcf<- byfam%>%
dplyr::select(site, plotID, subplotID,year, family, rel_cover) %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "rel_cover_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0))
cf<- byfam%>%
dplyr::select(site, plotID, subplotID,year, family, cover) %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "cover_",
values_from = (cover),
values_fill = list(cover = 0))
nspp_byfam <- full_on_cover%>%
dplyr::filter(nativeStatusCode %in% c("I", "N", "UNK")) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID,year, family, nativeStatusCode) %>%
dplyr::summarise(nspp = length(unique(scientificName))) %>%
dplyr::ungroup() %>%
dplyr::filter(family %in% families) %>%
tidyr::pivot_wider(names_from = c(family, nativeStatusCode),
names_prefix = "nspp_",
values_from = (nspp),
values_fill = list(nspp = 0))
}
# Cover by species ===========================================================
if(!is.na(spp)){
bysp <- full_on_cover%>%
dplyr::group_by(site, plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID, year, scientificName) %>%
dplyr::summarise(cover = sum(cover),
total_cover = first(total_cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(rel_cover = cover/total_cover) %>%
dplyr::ungroup() %>%
dplyr::mutate(gen = str_split(scientificName,
pattern = " ",
simplify = TRUE)[,1],
sp = str_split(scientificName,
pattern = " ",
simplify = TRUE)[,2],
gen_sp = str_c(gen, " ", sp)) %>%
dplyr::mutate(genus = str_split(scientificName,
pattern = " ",
simplify = TRUE)[,1],
species = str_split(scientificName,
pattern = " ",
simplify = TRUE)[,2],
gen_sp = str_c(genus, " ", species)) %>%
dplyr::filter(gen_sp %in% spp)
rc_sp <- bysp%>%
dplyr::select(site, plotID, subplotID,year, gen_sp, rel_cover) %>%
dplyr::mutate(gen_sp = str_replace(gen_sp, " ","_")) %>%
# the following 3 lines fix some kind of duplicate problem that happened here
# need to fix something upstream - jan 14 fixed it, need to test still
dplyr::group_by(site, plotID, subplotID,year, gen_sp) %>%
dplyr::summarise(rel_cover = mean(rel_cover)) %>%
dplyr::ungroup()%>%
tidyr::pivot_wider(names_from = gen_sp,
names_prefix = "rel_cover_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0))
c_sp<- bysp%>%
dplyr::select(site, plotID, subplotID,year, gen_sp, cover) %>%
dplyr::mutate(gen_sp = str_replace(gen_sp, " ","_")) %>%
# the following 3 lines fix some kind of duplicate problem that happened here
# need to fix something upstream - jan 14 fixed it, need to test still
dplyr::group_by(site, plotID, subplotID,year, gen_sp) %>%
dplyr::summarise(cover = mean(cover)) %>%
dplyr::ungroup()%>%
tidyr::pivot_wider(names_from = gen_sp,
names_prefix = "cover_",
values_from = (cover),
values_fill = list(cover = 0))
}
# by family, divided by biogeographic origin =================================
if(!is.na(families)){
exotic_grass <- full_on_cover%>%
dplyr::filter(nativeStatusCode %in% c("I", "N", "UNK")) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
dplyr::mutate(total_cover = sum(cover))%>%
dplyr::ungroup() %>%
dplyr::group_by(site, plotID, subplotID,year, family, nativeStatusCode) %>%
dplyr::summarise(cover = sum(cover),
total_cover = first(total_cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(rel_cover = cover/total_cover) %>%
dplyr::ungroup() %>%
dplyr::filter(family %in% families)
rc_ig<- exotic_grass%>%
dplyr::select(site, plotID, subplotID,year, family, nativeStatusCode,rel_cover) %>%
dplyr::filter(nativeStatusCode == "I") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "rc_exotic_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0)) %>%
dplyr::select(-nativeStatusCode)
rc_ng<- exotic_grass%>%
dplyr::select(site, plotID, subplotID,year, family, nativeStatusCode,rel_cover) %>%
dplyr::filter(nativeStatusCode == "N") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "rc_native_",
values_from = (rel_cover),
values_fill = list(rel_cover = 0)) %>%
dplyr::select(-nativeStatusCode)
c_ig<- exotic_grass%>%
dplyr::select(site, plotID, subplotID,year, family, nativeStatusCode,cover) %>%
dplyr::filter(nativeStatusCode == "I") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "cover_exotic_",
values_from = (cover),
values_fill = list(cover = 0)) %>%
dplyr::select(-nativeStatusCode)
c_ng<- exotic_grass%>%
dplyr::select(site, plotID, subplotID,year, family, nativeStatusCode,cover) %>%
dplyr::filter(nativeStatusCode == "N") %>%
tidyr::pivot_wider(names_from = family,
names_prefix = "cover_native_",
values_from = (cover),
values_fill = list(cover = 0)) %>%
dplyr::select(-nativeStatusCode)
}
# vegan::diversity indexes splitting between native status ==========================
# exotic ===============
vegan_friendly_div_ex<- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("I")) %>%
dplyr::group_by(site, plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
# note to self - hard code! gotta fix it
nspp_ex <- vegan_friendly_div_ex %>%
dplyr::select(site, plotID, subplotID,year) %>%
mutate(shannon_exotic = vegan::diversity(vegan_friendly_div_ex %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)),
nspp_exotic = vegan::specnumber(vegan_friendly_div_ex %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)))
# native ===========
vegan_friendly_div_n<- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("N")) %>%
dplyr::group_by(site, plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
nspp_n <- vegan_friendly_div_n %>%
dplyr::select(site, plotID, subplotID,year) %>%
mutate(shannon_native = vegan::diversity(vegan_friendly_div_n %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)),
nspp_native = vegan::specnumber(vegan_friendly_div_n %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)))
# unknown ========================
vegan_friendly_div_un<- full_on_cover %>%
dplyr::filter(nativeStatusCode %in% c("UNK")) %>%
dplyr::group_by(site, plotID, subplotID,taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm = TRUE)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::group_by(site, plotID, subplotID, year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
nspp_un <- vegan_friendly_div_un %>%
dplyr::select(site, plotID, subplotID,year) %>%
mutate(shannon_unknown = vegan::diversity(vegan_friendly_div_un %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)),
nspp_unknown = vegan::specnumber(vegan_friendly_div_un %>%
dplyr::select(-site,
-plotID,
-subplotID,
-year)))
# total vegan::diversity - not splitting between native status
vegan_friendly_div_total <- full_on_cover %>%
dplyr::group_by(site, plotID, subplotID, taxonID, year) %>%
dplyr::summarise(cover = sum(cover)) %>%
dplyr::ungroup() %>%
dplyr::mutate(taxonID = as.character(taxonID),
plotID = as.character(plotID)) %>%
dplyr::filter(nchar(as.character(taxonID))>0) %>%
dplyr::group_by(site, plotID, subplotID,year) %>%
tidyr::spread(taxonID, cover, fill=0) %>%
dplyr::ungroup()
div_total <- dplyr::select(vegan_friendly_div_total, site, plotID, subplotID,year) %>%
mutate(shannon_total = vegan::diversity(vegan_friendly_div_total%>%
dplyr::select(-site, -plotID, -subplotID, -year)),
nspp_total = vegan::specnumber(vegan_friendly_div_total%>%
dplyr::select(-site, -plotID, -subplotID, -year)))
# joining and writing out ------------------------------------------------------
final_table <- dplyr::left_join(nspp_ex,nspp_n, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(nspp_un, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(n_i_cover, by = c("site", "plotID", "subplotID","year")) %>%
dplyr::left_join(n_i_rel_cover, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(div_total, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::mutate(scale = scale,
invaded = if_else(cover_exotic > 0, "invaded", "not_invaded"))#%>%
#dplyr::mutate(scale = factor(scale, levels = c("1m","10m","100m", "plot", "site")))
if(!is.na(families)){
final_table <- final_table %>%
dplyr::left_join(rcf, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(rc_ig, by = c("site", "plotID", "subplotID", "year"))%>%
dplyr::left_join(c_ig, by = c("site", "plotID", "subplotID", "year"))%>%
dplyr::left_join(cf, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(rc_ng, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(c_ng, by = c("site", "plotID", "subplotID", "year"))%>%
dplyr::left_join(nspp_byfam, by = c("site", "plotID", "subplotID", "year"))}
if(!is.na(spp)){
final_table <- final_table %>%
dplyr::left_join(rc_sp, by = c("site", "plotID", "subplotID", "year")) %>%
dplyr::left_join(c_sp, by = c("site", "plotID", "subplotID", "year"))}
# seems crazy, i know... but those NAs should all definitely be zero
final_table <- final_table %>%
mutate_all(funs(replace(., is.na(.), 0)))
return(final_table)
}
devtools::document()
devtools::install()
devtools::install()
devtools::install()
neon_div_object <- neondiveRsity::download_plant_div("SRER")
get_diversity_info(neon_div_object)
library(neondiveRsity)
get_diversity_info(neon_div_object)
get_diversity_info(neon_div_object, scale="site")
get_diversity_info(neon_div_object, scale="1m")
neondiveRsity::download_plant_div("SRER") -> xx
scale <- "site"
trace_cover <- 0.5
fix_unks = FALSE
neon_div_object <- xx
full_on_cover <- get_longform_cover(neon_div_object,
scale = scale,
fix_unks = fix_unks)
library(neondiveRsity)
full_on_cover <- get_longform_cover(neon_div_object,
scale = scale,
fix_unks = fix_unks)
template <- full_on_cover %>%
dplyr::select(site, plotID, subplotID, year)
template
full_on_cover
detach("package:neondiveRsity", unload = TRUE)
devtools::document()
devtools::install()
remove.packages("neondiveRsity")
install_github("admahood/neondiveRsity")
devtools::install_github("admahood/neondiveRsity")
neondiveRsity::get_diversity_info(xx, scale="site")
neondiveRsity::get_diversity_info(neon_div_object = neondiveRsity::download_plant_div("ABBY"), scale="site")->test
test
get_diversity_info
neondiveRsity::get_diversity_info
library(neondiveRsity)
get_longform_cover()
get_longform_cover
remove.packages("neondiveRsity")
devtools::install_github("admahood/neondiveRsity")
neondiveRsity::get_diversity_info(neon_div_object = neondiveRsity::download_plant_div("ABBY"), scale="site")->test
tesyt
test
x <- download_plant_div("SRER")
library(neondiveRsity)
x <- download_plant_div("SRER")
get_diversity_info(x, "site")
devtools::document()
devtools::install()
