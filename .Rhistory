theme(panel.background = element_rect(fill=NA, color="black"),
axis.title.y = element_blank(),
panel.grid.major.y = element_line(color = "grey", linetype = 2)) +
xlab("Range of Values") +
ggtitle("NEON Terrestrial Sites");caterpillar
order_d<-caterpillar_data %>%
group_by(site) %>%
filter(property == "rel_cover_exotic") %>%
dplyr::select(site, orderval=max)
caterpillar <-
caterpillar_data %>%
filter(!property %in% c("year", "nspp_unknown", "rel_cover_unknown")) %>%
left_join(order_d) %>%
ggplot(aes(y = reorder(site, orderval))) +
geom_segment(aes(x = min, xend=max, yend = site), lwd =1) +
facet_grid(~property, scales = "free") +
theme_classic() +
theme(panel.background = element_rect(fill=NA, color="black"),
axis.title.y = element_blank(),
panel.grid.major.y = element_line(color = "grey", linetype = 2)) +
xlab("Range of Values") +
ggtitle("NEON Terrestrial Sites");caterpillar
caterpillar_data %>%
filter(!property %in% c("year", "nspp_unknown", "rel_cover_unknown")) %>%
left_join(order_d) %>%
ggplot(aes(y = reorder(site, orderval)))
caterpillar_data %>%
filter(!property %in% c("year", "nspp_unknown", "rel_cover_unknown")) %>%
left_join(order_d)
all %>%
group_by(site) %>%
mutate(year = as.numeric(year))
caterpillar_data <-
all %>%
group_by(site) %>%
mutate(year = as.numeric(year),
rel_cover_exotic = rel_cover_exotic*100) %>%
summarise(min_year = min(year),
max_year = max(year),
max_nspp_exotic = max(nspp_exotic),
min_nspp_exotic = min(nspp_exotic),
max_nspp_unknown = max(nspp_unknown),
min_nspp_unknown = min(nspp_unknown),
max_rel_cover_exotic = max(rel_cover_exotic),
min_rel_cover_exotic = min(rel_cover_exotic),
max_rel_cover_unknown = max(rel_cover_unknown),
min_rel_cover_unknown = min(rel_cover_unknown)) %>%
ungroup() %>%
pivot_longer(cols = names(.)[2:ncol(.)]) %>%
mutate(stat = str_sub(name, 1,3),
property = str_remove_all(name, c("max_", "min_")),
property = ifelse(property == "min_year", "year", property),
property = ifelse(property == "max_year", "year", property)) %>%
dplyr::select(-name) %>%
pivot_wider(names_from = c(stat), values_from = value)
order_d<-caterpillar_data %>%
group_by(site) %>%
filter(property == "rel_cover_exotic") %>%
dplyr::select(site, orderval=max)
caterpillar <-
caterpillar_data %>%
filter(!property %in% c("year", "nspp_unknown", "rel_cover_unknown")) %>%
left_join(order_d) %>%
ggplot(aes(y = reorder(site, orderval))) +
geom_segment(aes(x = min, xend=max, yend = site), lwd =1) +
facet_grid(~property, scales = "free") +
theme_classic() +
theme(panel.background = element_rect(fill=NA, color="black"),
axis.title.y = element_blank(),
panel.grid.major.y = element_line(color = "grey", linetype = 2)) +
xlab("Range of Values") +
ggtitle("NEON Terrestrial Sites");caterpillar
caterpillar_data %>%
filter(!property %in% c("year", "nspp_unknown", "rel_cover_unknown")) %>%
left_join(order_d)
caterpillar <-
caterpillar_data %>%
filter(!property %in% c("year", "nspp_unknown", "rel_cover_unknown")) %>%
left_join(order_d) %>%
mutate(property = case_when(property == "nspp_exotic" ~ "Number of Exotic Species",
property == "rel_cover_exotic" ~ "Relative Cover of Exotic Species")) %>%
ggplot(aes(y = reorder(site, orderval))) +
geom_segment(aes(x = min, xend=max, yend = site), lwd =1) +
facet_grid(~property, scales = "free") +
theme_classic() +
theme(panel.background = element_rect(fill=NA, color="black"),
axis.title.y = element_blank(),
panel.grid.major.y = element_line(color = "grey", linetype = 2)) +
xlab("Range of Values") +
ggtitle("NEON Terrestrial Sites");caterpillar
# dir.create("figs")
ggsave(caterpillar, filename = "figs/caterpillar_plot_exotics.png", height=7,width = 10)
order_d<-caterpillar_data %>%
group_by(site) %>%
filter(property == "nspp_exotic") %>%
dplyr::select(site, orderval=max)
caterpillar <-
caterpillar_data %>%
filter(!property %in% c("year", "nspp_unknown", "rel_cover_unknown")) %>%
left_join(order_d) %>%
mutate(property = case_when(property == "nspp_exotic" ~ "Number of Exotic Species",
property == "rel_cover_exotic" ~ "Relative Cover of Exotic Species")) %>%
ggplot(aes(y = reorder(site, orderval))) +
geom_segment(aes(x = min, xend=max, yend = site), lwd =1) +
facet_grid(~property, scales = "free") +
theme_classic() +
theme(panel.background = element_rect(fill=NA, color="black"),
axis.title.y = element_blank(),
panel.grid.major.y = element_line(color = "grey", linetype = 2)) +
xlab("Range of Values") +
ggtitle("NEON Terrestrial Sites");caterpillar
caterpillar <-
caterpillar_data %>%
filter(!property %in% c("year", "nspp_unknown", "rel_cover_unknown")) %>%
left_join(order_d) %>%
mutate(property = case_when(property == "nspp_exotic" ~ "Number of Exotic Species",
property == "rel_cover_exotic" ~ "Relative Cover of Exotic Species")) %>%
ggplot(aes(y = reorder(site, orderval))) +
geom_segment(aes(x = min, xend=max, yend = site), lwd =1) +
facet_grid(~property, scales = "free") +
theme_classic() +
theme(panel.background = element_rect(fill=NA, color="black"),
axis.title.y = element_blank(),
panel.grid.major.y = element_line(color = "grey", linetype = 2)) +
xlab("Range of Values (Species encountered and cover vary from year to year)") +
ggtitle("NEON Terrestrial Sites");caterpillar
# dir.create("figs")
ggsave(caterpillar, filename = "figs/caterpillar_plot_exotics.png", height=7,width = 10)
caterpillar <-
caterpillar_data %>%
filter(!property %in% c("year", "nspp_unknown", "rel_cover_unknown")) %>%
left_join(order_d) %>%
mutate(property = case_when(property == "nspp_exotic" ~ "Number of Exotic Species",
property == "rel_cover_exotic" ~ "Relative Cover of Exotic Species")) %>%
ggplot(aes(y = reorder(site, orderval))) +
geom_segment(aes(x = min, xend=max, yend = site), lwd =1) +
facet_grid(~property, scales = "free") +
theme_classic() +
theme(panel.background = element_rect(fill=NA, color="black"),
axis.title.y = element_blank(),
panel.grid.major.y = element_line(color = "grey", linetype = 2)) +
xlab("Range of Values (Species encountered and abundance vary from year to year)") +
ggtitle("NEON Terrestrial Sites");caterpillar
# dir.create("figs")
ggsave(caterpillar, filename = "figs/caterpillar_plot_exotics.png", height=7,width = 10)
# getting summary statistics
library(tidyverse)
library(neondiveRsity)
library(neonUtilities)
# getting all the sites
sites <- read_csv("data/NEON_Field_Site_Metadata_20220412.csv")
site_codes <- sites %>%
filter(field_site_type %in% c("Gradient Terrestrial", "Core Terrestrial")) %>%
pull(field_site_id)
# downloading all data
if(!file.exists("data/all_div_site.Rda")){div<- list()
for(i in 1:length(site_codes)){
print(site_codes[i])
div[[i]] <- neondiveRsity::download_plant_div(sites = site_codes[i]) %>%
neondiveRsity::get_diversity_info(scale = "site")
}
all <- bind_rows(div)
save(all, file= "data/all_div_site.Rda")
}else{load("data/all_div_site.Rda")}
unaggregated<- all %>%
dplyr::select(site, year, nspp_exotic, rel_cover_exotic,
nspp_unknown, rel_cover_unknown) %>%
pivot_longer(cols = c(nspp_exotic, rel_cover_exotic,
nspp_unknown, rel_cover_unknown)) %>%
ggplot(aes(x= value)) +
geom_histogram() +
facet_wrap(~name, scales = "free") +
theme_classic()
ggsave(unaggregated, filename = "summary_all_terrestrial_sites.png")
unaggregated
caterpillar_data <-
all %>%
group_by(site) %>%
mutate(year = as.numeric(year),
rel_cover_exotic = rel_cover_exotic*100) %>%
summarise(min_year = min(year),
max_year = max(year),
max_nspp_exotic = max(nspp_exotic),
min_nspp_exotic = min(nspp_exotic),
max_nspp_unknown = max(nspp_unknown),
min_nspp_unknown = min(nspp_unknown),
max_rel_cover_exotic = max(rel_cover_exotic),
min_rel_cover_exotic = min(rel_cover_exotic),
max_rel_cover_unknown = max(rel_cover_unknown),
min_rel_cover_unknown = min(rel_cover_unknown)) %>%
ungroup() %>%
pivot_longer(cols = names(.)[2:ncol(.)]) %>%
mutate(stat = str_sub(name, 1,3),
property = str_remove_all(name, c("max_", "min_")),
property = ifelse(property == "min_year", "year", property),
property = ifelse(property == "max_year", "year", property)) %>%
dplyr::select(-name) %>%
pivot_wider(names_from = c(stat), values_from = value)
order_d<-caterpillar_data %>%
group_by(site) %>%
filter(property == "nspp_exotic") %>%
dplyr::select(site, orderval=max)
caterpillar <-
caterpillar_data %>%
filter(!property %in% c("year", "nspp_unknown", "rel_cover_unknown")) %>%
left_join(order_d) %>%
mutate(property = case_when(property == "nspp_exotic" ~ "Number of Exotic Species",
property == "rel_cover_exotic" ~ "Relative Cover of Exotic Species")) %>%
ggplot(aes(y = reorder(site, orderval))) +
geom_segment(aes(x = min, xend=max, yend = site), lwd =1) +
facet_grid(~property, scales = "free") +
theme_classic() +
theme(panel.background = element_rect(fill=NA, color="black"),
axis.title.y = element_blank(),
panel.grid.major.y = element_line(color = "grey", linetype = 2)) +
xlab("Range of Values (Species encountered and abundance vary from year to year)") +
ggtitle("NEON Terrestrial Sites");caterpillar
caterpillar <-
caterpillar_data %>%
filter(!property %in% c("year", "nspp_unknown", "rel_cover_unknown")) %>%
left_join(order_d) %>%
mutate(property = case_when(property == "nspp_exotic" ~ "Number of Non-Native Species",
property == "rel_cover_exotic" ~ "Relative Cover of Non-Native Species")) %>%
ggplot(aes(y = reorder(site, orderval))) +
geom_segment(aes(x = min, xend=max, yend = site), lwd =1) +
facet_grid(~property, scales = "free") +
theme_classic() +
theme(panel.background = element_rect(fill=NA, color="black"),
axis.title.y = element_blank(),
panel.grid.major.y = element_line(color = "grey", linetype = 2)) +
xlab("Range of Values (Species encountered and abundance vary from year to year)") +
ggtitle("NEON Terrestrial Sites");caterpillar
# dir.create("figs")
ggsave(caterpillar, filename = "figs/caterpillar_plot_exotics.png", height=7,width = 10)
library(devtools)
check()
read_csv("data/NEON_Field_Site_Metadata_20220412.csv")
readr::read_csv("data/NEON_Field_Site_Metadata_20220412.csv")
readr::read_csv("data/NEON_Field_Site_Metadata_20220412.csv") ->x
names()
names(x)
glimpse(x)
library(tidyverse)
glimpse(x)
devtools::install_github("admahood/neondiveRsity")
check()
check()
check()
?replace_na
?bind_rows
?range
?group_by
?summarise
?mutate
library(vegan)
?left_join
?str_split
check()
devtools::check()
#' neonUtilities::loadByProduct() with the dpID arguement set to "DP1.10058.001".
#' @param trace_cover cover value for subplots where only occupancy was recorded
#' @param scale what level of aggregation? This can be "1m", "10m", "100m", "plot",
#' which is the default, or "site".
#' @param fix_unks Should the unknown codes be altered with the "unk_fixer()"
#' function? Defaults to false. This requires manual investigation and editing
#' of the unk_fixer function.
#' @examples raw_div<-download_plant_div(sites = "SRER")
#' lf_div <- get_longform_cover(raw_div)
#' @export
get_longform_cover <- function(neon_div_object,
trace_cover=0.5,
scale = "plot",
dissolve_years = FALSE,
fix_unks = FALSE){
require(tidyverse)
if(scale == "plot"){
cover <- neon_div_object$div_1m2Data %>%
dplyr::mutate(endDate = as.Date(endDate)) %>%
dplyr::filter(divDataType == "plantSpecies") %>%
dplyr::mutate(year = str_c(str_sub(endDate,1,4)))%>%
tidyr::replace_na(list(percentCover=trace_cover)) %>%
dplyr::group_by(plotID, subplotID, taxonID, year) %>%
# dealing with the multiple bout issue by first getting the max cover
# per sampling effort
dplyr::summarise(cover = max(percentCover),
nativeStatusCode = first(nativeStatusCode),
scientificName = first(scientificName),
family = first(family)) %>%
dplyr::ungroup()  %>%
dplyr::filter(taxonID != "") %>%
dplyr::group_by(plotID, taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm=TRUE)/8,
nativeStatusCode = first(nativeStatusCode),
scientificName = first(scientificName),
family = first(family)) %>%
dplyr::ungroup()
traces <- neon_div_object$div_10m2Data100m2Data %>%
dplyr::mutate(endDate = as.Date(endDate)) %>%
dplyr::filter(targetTaxaPresent == "Y") %>%
dplyr::mutate(year = str_c(str_sub(endDate,1,4)))%>%
dplyr::group_by(plotID, subplotID, taxonID, year) %>%
dplyr::summarise(cover = trace_cover,
scientificName = first(scientificName),
nativeStatusCode = first(nativeStatusCode),
family = first(family)) %>%
dplyr::ungroup() %>%
dplyr::filter(taxonID != "") %>%
dplyr::group_by(plotID, taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm=TRUE)/12,
nativeStatusCode = first(nativeStatusCode),
scientificName = first(scientificName),
family = first(family)) %>%
dplyr::ungroup()
full_on_cover <- dply::bind_rows(cover, traces) %>%
dplyr::group_by(plotID, taxonID, year, nativeStatusCode, scientificName, family) %>%
dplyr::summarise(cover = sum(cover)) %>%
dplyr::ungroup()%>%
dplyr::mutate(site = str_sub(plotID, 1,4),
subplotID = "plot")
if(fix_unks) full_on_cover <- full_on_cover %>%  unk_fixer()
if(dissolve_years) {
year_range <- unique(full_on_cover$year)%>%
as.numeric %>%
range %>%
paste(collapse = "-")
n_years <- length(unique(full_on_cover$year))
full_on_cover <- full_on_cover %>%
dplyr::group_by(plotID, taxonID, nativeStatusCode, scientificName, family, site, subplotID) %>%
dplyr::summarise(cover = sum(cover, na.rm=T)/n_years) %>%
dplyr::ungroup() %>%
dplyr::mutate(year = year_range)
}
return(full_on_cover)
}
if(scale == "site"){
cover <- neon_div_object$div_1m2Data %>%
dplyr::mutate(endDate = as.Date(endDate)) %>%
dplyr::filter(divDataType == "plantSpecies") %>%
dplyr::mutate(year = str_c(str_sub(endDate,1,4)))%>%
tidyr::replace_na(list(percentCover=trace_cover)) %>%
dplyr::group_by(plotID, subplotID, taxonID, year) %>%
# dealing with the multiple bout issue by first getting the max cover
# per sampling effort
dplyr::summarise(cover = max(percentCover),
nativeStatusCode = first(nativeStatusCode),
scientificName = first(scientificName),
family = first(family)) %>%
dplyr::ungroup()  %>%
dplyr::filter(taxonID != "") %>%
dplyr::group_by(plotID, taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm=TRUE)/8,
nativeStatusCode = first(nativeStatusCode),
scientificName = first(scientificName),
family = first(family)) %>%
dplyr::ungroup()
traces <- neon_div_object$div_10m2Data100m2Data %>%
dplyr::mutate(endDate = as.Date(endDate)) %>%
dplyr::filter(targetTaxaPresent == "Y") %>%
dplyr::mutate(year = str_c(str_sub(endDate,1,4)))%>%
dplyr::group_by(plotID, subplotID, taxonID, year) %>%
dplyr::summarise(cover = trace_cover,
scientificName = first(scientificName),
nativeStatusCode = first(nativeStatusCode),
family = first(family)) %>%
dplyr::ungroup() %>%
dplyr::filter(taxonID != "") %>%
dplyr::group_by(plotID, taxonID, year) %>%
dplyr::summarise(cover = sum(cover, na.rm=TRUE)/12,
nativeStatusCode = first(nativeStatusCode),
scientificName = first(scientificName),
family = first(family)) %>%
dplyr::ungroup()
n_plots <- length(unique(cover$plotID))
full_on_cover <- bind_rows(cover, traces) %>%
dplyr::group_by(plotID, taxonID, year, nativeStatusCode, scientificName, family) %>%
dplyr::summarise(cover = sum(cover)) %>%
dplyr::ungroup()%>%
dplyr::mutate(site = str_sub(plotID, 1,4)) %>%
dplyr::group_by(site, taxonID, year, nativeStatusCode, scientificName, family) %>%
dplyr::summarise(cover = sum(cover)/n_plots) %>%
dplyr::mutate(subplotID = "site",
plotID = "site") %>%
dplyr::ungroup()
if(fix_unks) full_on_cover <- full_on_cover %>%  unk_fixer()
if(dissolve_years) {
year_range <- unique(full_on_cover$year)%>%
as.numeric %>%
range %>%
paste(collapse = "-")
n_years <- length(unique(full_on_cover$year))
full_on_cover <- full_on_cover %>%
dplyr::group_by(plotID, taxonID, nativeStatusCode, scientificName, family, site, subplotID) %>%
dplyr::summarise(cover = sum(cover, na.rm=T)/n_years) %>%
dplyr::ungroup() %>%
dplyr::mutate(year = year_range)
}
return(full_on_cover)
}
cover8 <- neon_div_object$div_1m2Data %>%
dplyr::mutate(endDate = as.Date(endDate)) %>%
dplyr::filter(divDataType == "plantSpecies") %>%
dplyr::mutate(year = str_c(str_sub(endDate,1,4)))%>%
# entries in the df with no values but species was there
# i.e. someone put the sp. code and forgot to fill in the number
# putting as trace cover value
tidyr::replace_na(list(percentCover=trace_cover)) %>%
dplyr::mutate(endDate = as.Date(endDate)) %>%
dplyr::filter(divDataType == "plantSpecies") %>%
dplyr::mutate(year = str_c(str_sub(endDate,1,4)))%>%
dplyr::group_by(plotID, subplotID, taxonID, year) %>%
# dealing with the multiple bout issue by first getting the mean cover
# per sampling effort, without aggregating, then later we'll aggregate.
# that way, a fall-bloomer that isn't visible in spring, for example,
# will be given its full cover value for fall, but then a species
# that is there for both seasons will be averaged, if that makes sense
dplyr::summarise(cover = max(percentCover),
nativeStatusCode = first(nativeStatusCode),
scientificName = first(scientificName),
family = first(family)) %>%
dplyr::ungroup()  %>%
dplyr::filter(taxonID != "") %>%
dplyr::mutate(subplotID = str_sub(subplotID, 1, 4))
# 10m2,100m2 are given 0.5 (we can change later)
# unique(x$div_10m2Data100m2Data$subplotID) # there are 12 subplots
traces8 <- neon_div_object$div_10m2Data100m2Data %>%
dplyr::mutate(endDate = as.Date(endDate)) %>%
dplyr::filter(targetTaxaPresent == "Y") %>%
dplyr::mutate(year = str_c(str_sub(endDate,1,4)))%>%
dplyr::group_by(plotID, subplotID, taxonID, year) %>%
dplyr::summarise(cover = trace_cover,
scientificName = first(scientificName),
nativeStatusCode = first(nativeStatusCode),
family = first(family)) %>%
dplyr::ungroup() %>%
dplyr::filter(taxonID != "",
subplotID != "31", # these are the 100m2 subplots under which two 1m2 and 10m2 pairs are nested
subplotID != "32",
subplotID != "40",
subplotID != "41")  %>%
dplyr::mutate(subplotID = str_sub(subplotID, 1, 4))
traces100s <- neon_div_object$div_10m2Data100m2Data %>%
dplyr::mutate(endDate = as.Date(endDate)) %>%
dplyr::filter(targetTaxaPresent == "Y") %>%
dplyr::mutate(year = str_c(str_sub(endDate,1,4)))%>%
dplyr::group_by(plotID, subplotID, taxonID, year) %>%
dplyr::summarise(cover = trace_cover,
scientificName = first(scientificName),
nativeStatusCode = first(nativeStatusCode),
family = first(family)) %>%
dplyr::ungroup() %>%
dplyr::mutate(site = str_sub(plotID, 1,4)) %>%
dplyr::filter(taxonID != "",
subplotID == "31"| # these are the 100m2 subplots under which two 1m2 and 10m2 pairs are nested
subplotID == "32"|
subplotID == "40"|
subplotID == "41")
# aggregating at different scales ----------------------------------------------
cover8_1m2 <- cover8 %>%
dplyr::group_by(plotID, subplotID, taxonID, year, nativeStatusCode, scientificName, family) %>%
dplyr::summarise(cover = sum(cover)) %>%
dplyr::ungroup()%>%
dplyr::mutate(site = str_sub(plotID, 1,4))
if(fix_unks) cover8_1m2 <- unk_fixer(cover8_1m2)
cover8_1m2_10m2 <- rbind(cover8, traces8) %>%
dplyr::group_by(plotID,subplotID, taxonID, year, nativeStatusCode, scientificName, family) %>%
dplyr::summarise(cover = sum(cover)) %>%
dplyr::ungroup()%>%
dplyr::mutate(site = str_sub(plotID, 1,4))
if(fix_unks) cover8_1m2_10m2<-cover8_1m2_10m2 %>%  unk_fixer()
cover4 <- cover8_1m2_10m2 %>%
dplyr::mutate(subplotID = str_sub(subplotID, 1,2)) %>%
dplyr::bind_rows(traces100s) %>% # adding in the 100m2 subplots
dplyr::group_by(plotID, subplotID, year, taxonID) %>%
dplyr::summarise(cover = sum(cover), # this is summing together repeats from the rbinding
scientificName = first(scientificName),
nativeStatusCode = first(nativeStatusCode),
family = first(family),
site = first(site)) %>%
dplyr::ungroup()
if(fix_unks) cover4 <- cover4 %>%  unk_fixer()
if(scale == "1m") full_on_cover <- cover8_1m2
if(scale == "10m") full_on_cover <- cover8_1m2_10m2
if(scale == "100m") full_on_cover <- cover4
if(dissolve_years) {
year_range <- unique(full_on_cover$year)%>%
as.numeric %>%
range %>%
paste(collapse = "-")
n_years <- length(unique(full_on_cover$year))
full_on_cover <- full_on_cover %>%
dplyr::group_by(plotID, taxonID, nativeStatusCode, scientificName, family, site, subplotID) %>%
dplyr::summarise(cover = sum(cover, na.rm=T)/n_years) %>%
dplyr::ungroup() %>%
dplyr::mutate(year = year_range)
}
return(full_on_cover)
}
load("data/all_div_site.Rda")
get_longform_cover(x)
get_longform_cover(all)
all
x
neondiveRsity::download_plant_div("SRER") -> neon_div_object
get_longform_cover(neon_div_object)
devtools::check()
devtools::check()
devtools::check()
?gsub
devtools::check()
use_mit_license()
document()
devtools::install()
